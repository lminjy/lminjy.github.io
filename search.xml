<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>matery主题修改</title>
      <link href="/2022/03/31/matery-zhu-ti-xiu-gai/"/>
      <url>/2022/03/31/matery-zhu-ti-xiu-gai/</url>
      
        <content type="html"><![CDATA[<h1 id="matery-主题配置"><a href="#matery-主题配置" class="headerlink" title="matery 主题配置"></a>matery 主题配置</h1><p>参考matery的README文件，博客园弗兰克的猫的<a href="https://www.cnblogs.com/mfrank/p/12830097.html#autoid-0-4-0">matery主题配置</a> ，阿里云YangAir的<a href="https://developer.aliyun.com/article/742964#slide-18">hexo+github搭建博客(超级详细版，精细入微)</a></p><h2 id="配置页面"><a href="#配置页面" class="headerlink" title="配置页面"></a>配置页面</h2><p>在根目录下</p><ul><li><p>修改 <code>_config.yml</code> 的 <code>url</code> 的值为自己的域名 (<code>https://lminjy.xyz/</code>)</p></li><li><p>修改两处<code>per_page</code> 为<code>12</code></p></li><li><p>新建分类<code>categories</code> ，标签<code>tags</code>，关于我<code>about</code> ，404<code>404</code> ，友情链接（学习链接）<code>friends</code> ，留言板<code>contact</code></p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span class="token comment" spellcheck="true"># 将categoris分别替换成tags,about,404,friends,contact</span></code></pre></li><li><p>编辑新建的页面文件 <code>/source/categories/index.md</code></p><pre class=" language-text"><code class="language-text">---title: categoriesdate: 2022-03-31 15:15:00type: "categories"layout: "categories"---# 将categoris分别替换成tags,about,friends,contact</code></pre></li><li><p>在博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"url_icon"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"name"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"introduction"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"url"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"title"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre></li></ul><h2 id="导航页面"><a href="#导航页面" class="headerlink" title="导航页面"></a>导航页面</h2><p>在<code>matery</code> 主题中的<code>_config.yml</code> 可以修改菜单导航的名称、路径url和图标icon</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式</li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Contact</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /contact    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>comments  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token comment" spellcheck="true"># 二级菜单写法如下</span>  <span class="token key atrule">Resources</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><p>新添加的菜单需要翻译成对应的中文，打开theme/next/languages/zh-CN.yml，设置：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">Resources</span><span class="token punctuation">:</span> 资源</code></pre><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="替换Hexo的代码高亮"><a href="#替换Hexo的代码高亮" class="headerlink" title="替换Hexo的代码高亮"></a>替换Hexo的代码高亮</h3><pre class=" language-bash"><code class="language-bash">cnpm i -S hexo-prism-plugin</code></pre><p>修改根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span></code></pre><p>记得markdown代码框需要选择语言</p><h3 id="设置内容搜索"><a href="#设置内容搜索" class="headerlink" title="设置内容搜索"></a>设置内容搜索</h3><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h3><pre class=" language-bash"><code class="language-bash">cnpm i hexo-permalink-pinyin --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><h3 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h3><pre class=" language-bash"><code class="language-bash">cnpm i --save hexo-wordcount</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h3 id="添加emoji表情支持"><a href="#添加emoji表情支持" class="headerlink" title="添加emoji表情支持"></a>添加emoji表情支持</h3><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  <span class="token key atrule">customEmojis</span><span class="token punctuation">:</span></code></pre><p>markdow语法为 <code>:(...):</code></p><h3 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h3><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明安装成功。</p><h2 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h2><p>在主题的 <code>_config.yml</code> 文件中修改</p><h3 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 梦想</span><span class="token key atrule">dream</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 电影台词  <span class="token key atrule">text</span><span class="token punctuation">:</span> 面包会有的，一切都会有的</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 打字效果副标题</span><span class="token comment" spellcheck="true"># 如果有符号 ‘ ，请在 ’ 前面加上 \</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否循环</span>  <span class="token key atrule">showCursor</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否显示光标</span>  <span class="token key atrule">startDelay</span><span class="token punctuation">:</span> <span class="token number">300 </span><span class="token comment" spellcheck="true"># 开始延迟</span>  <span class="token key atrule">typeSpeed</span><span class="token punctuation">:</span> <span class="token number">100 </span><span class="token comment" spellcheck="true"># 打字速度</span>  <span class="token key atrule">backSpeed</span><span class="token punctuation">:</span> <span class="token number">50 </span><span class="token comment" spellcheck="true"># 删除速度</span>  <span class="token key atrule">sub</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> Make The Change</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Configure website favicon and LOGO</span><span class="token comment" spellcheck="true"># 配置网站favicon和网站LOGO</span><span class="token key atrule">favicon</span><span class="token punctuation">:</span> /favicon.png<span class="token key atrule">logo</span><span class="token punctuation">:</span> /medias/logo.png<span class="token comment" spellcheck="true">#更改相应的图片</span></code></pre><h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># profile in about page, including avatars, career, and personal introductions.</span><span class="token comment" spellcheck="true"># 在”关于”页面中配置个人信息，包括头像、职业和个人介绍.</span><span class="token key atrule">profile</span><span class="token punctuation">:</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> /medias/avatar.jpg  <span class="token key atrule">career</span><span class="token punctuation">:</span> Softwar Engineer  <span class="token key atrule">introduction</span><span class="token punctuation">:</span> If you wish to succeed<span class="token punctuation">,</span> you should use persistence as your good friend<span class="token punctuation">,</span> experience as your reference<span class="token punctuation">,</span> prudence as your brother and hope as your sentry.</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否激活文章末尾的打赏功能，默认激活（你替换为的你自己的微信、支付宝二维码图片、或者使用网络图片也可以）.</span><span class="token key atrule">reward</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 你的赏识是我前进的动力  <span class="token key atrule">wechat</span><span class="token punctuation">:</span> /medias/reward/wechat.png  <span class="token key atrule">alipay</span><span class="token punctuation">:</span> /medias/reward/alipay.jpg</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display fork me on github icon and link, default true, You can change it to your repo address</span><span class="token comment" spellcheck="true"># 配置是否在 header 中显示 fork me on github 的图标，默认为true，你可以修改为你的仓库地址.</span><span class="token key atrule">githubLink</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/lminjy/lminjy.github.io  <span class="token key atrule">title</span><span class="token punctuation">:</span> Fork Me</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># The configuration of the second button in the home banner,</span><span class="token comment" spellcheck="true"># including the display name of the button, the font awesome icon, and the hyperlink to the button.</span><span class="token comment" spellcheck="true"># 首页 banner 中的第二个按钮的配置，包括按钮的显示名称、font awesome图标和按钮的超链接.</span><span class="token key atrule">indexbtn</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> Github  <span class="token key atrule">icon</span><span class="token punctuation">:</span> fab fa<span class="token punctuation">-</span>github<span class="token punctuation">-</span>alt  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/lminjy/lminjy.github.io</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># config my projects informations in about page.</span><span class="token comment" spellcheck="true"># If you don't want to display this `My Projects` content, you can deactivate or delete this configuration.</span><span class="token comment" spellcheck="true"># 在“关于”页面配置"我的项目"信息，如果你不需要这些信息则可以将其设置为不激活或者将其删除.</span><span class="token key atrule">myProjects</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">hexo-theme-matery</span><span class="token punctuation">:</span>      <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>file<span class="token punctuation">-</span>alt      <span class="token key atrule">iconBackground</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to bottom right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#66BB6A 0%, #81C784 100%)'</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//github.com/blinkfox/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery      <span class="token key atrule">desc</span><span class="token punctuation">:</span> This is a Hexo blog theme with 'Material Design' and responsive design.    <span class="token key atrule">Fenix</span><span class="token punctuation">:</span>        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>database        <span class="token key atrule">iconBackground</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to bottom right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#F06292 0%, #EF5350 100%)'</span>        <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/blinkfox/fenix        <span class="token key atrule">desc</span><span class="token punctuation">:</span> 这是 Spring Data JPA 复杂或动态 SQL 查询的扩展库。    <span class="token key atrule">typora-vue-theme</span><span class="token punctuation">:</span>        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>file<span class="token punctuation">-</span>alt        <span class="token key atrule">iconBackground</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to bottom right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#29B6F6 0%, #1E88E5 100%)'</span>        <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/blinkfox/typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme        <span class="token key atrule">desc</span><span class="token punctuation">:</span> This is a typora theme inspired by Vue document style.</code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># config my skills informations in about page.</span><span class="token comment" spellcheck="true"># If you don't want to display this `My Skills` content, you can deactivate or delete this configuration.</span><span class="token comment" spellcheck="true"># 在“关于”页面配置"我的技能"信息，如果你不需要这些信息则可以将其设置为不激活或者将其删除.</span><span class="token key atrule">mySkills</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">Java</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#FF0066 0%, #FF00CC 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 85%    <span class="token key atrule">JavaScript</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#9900FF 0%, #CC66FF 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 80%    <span class="token key atrule">HTML5</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#2196F3 0%, #42A5F5 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 80%    <span class="token key atrule">CSS</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#00BCD4 0%, #80DEEA 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 70%    <span class="token key atrule">SQL</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#4CAF50 0%, #81C784 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 90%    <span class="token key atrule">程序设计</span><span class="token punctuation">:</span>      <span class="token key atrule">background</span><span class="token punctuation">:</span> 'linear<span class="token punctuation">-</span>gradient(to right<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#FFEB3B 0%, #FFF176 100%)'</span>      <span class="token key atrule">percent</span><span class="token punctuation">:</span> 75%</code></pre><h3 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># The configurations of the second line of home banner</span><span class="token comment" spellcheck="true"># icon/button will not show up if you leave the corresponding socialLink empty</span><span class="token comment" spellcheck="true"># 首页 banner 中的第二行个人信息配置，留空即不启用</span><span class="token key atrule">socialLink</span><span class="token punctuation">:</span>  <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/lminjy  <span class="token key atrule">email</span><span class="token punctuation">:</span> linminvc@163.com  <span class="token key atrule">facebook</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.facebook.com/xxx</span>  <span class="token key atrule">twitter</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://twitter.com/xxx</span>  <span class="token key atrule">qq</span><span class="token punctuation">:</span> <span class="token number">1140339517</span>  <span class="token key atrule">weibo</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://weibo.com/xxx</span>  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.zhihu.com/xxx</span>  <span class="token key atrule">rss</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># true、false</span></code></pre><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 网站背景图</span><span class="token key atrule">background</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Tokisaki-Galaxy/res/site/medias/background.jp"</span></code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#动态背景</span><span class="token comment" spellcheck="true">#背景canvas-nest</span><span class="token key atrule">canvas_nest</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255 </span><span class="token comment" spellcheck="true"># 线条颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  <span class="token key atrule">pointColor</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255 </span><span class="token comment" spellcheck="true"># 交点颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 线条透明度（0~1）, 默认: 0.5</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">-1 </span><span class="token comment" spellcheck="true"># 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1.</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">99 </span><span class="token comment" spellcheck="true"># 线条的总数量, 默认: 99</span><span class="token comment" spellcheck="true"># 是否激活页面飘雪效果, 只在桌面版网页启用特效</span><span class="token key atrule">snowdown</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># banner 是否每日切换.</span><span class="token comment" spellcheck="true"># 若为 false, 则 banner 默认为 /medias/banner/0.jpg</span><span class="token key atrule">banner</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h3 id="动态标签栏"><a href="#动态标签栏" class="headerlink" title="动态标签栏"></a>动态标签栏</h3><p>在matery\source\js下创建dynamic-title.js</p><pre class=" language-javascript"><code class="language-javascript"> <span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token keyword">var</span> titleTime<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">{</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヽ(●-`Д´-)ノ下次见啦！'</span><span class="token punctuation">;</span>         <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'φ(゜▽゜*)♪欢迎回来！'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>         titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在themes\matery\layout下的layout.ejs中添加</p><pre class=" language-html"><code class="language-html">&lt;script src="<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">theme.jsDelivr.url</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/js/dynamic-title.js'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>"<span class="token operator">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h3><p>在matery\source\css下修改matery.css的.bg-color</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#ec407a</span> <span class="token number">0%</span>, <span class="token hexcode">#7e57c2</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>  //透明效果 值范围 <span class="token number">0</span>~<span class="token number">1</span>，看情况自己修改<span class="token punctuation">}</span></code></pre><h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display the musics.</span><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">autoHide</span><span class="token punctuation">:</span> <span class="token boolean important">true    </span><span class="token comment" spellcheck="true"># hide automaticaly</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span> tencent   <span class="token comment" spellcheck="true">#require    music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">7071279876     </span><span class="token comment" spellcheck="true">#require    song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">true       </span><span class="token comment" spellcheck="true"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true  </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">hideLrc</span><span class="token punctuation">:</span> <span class="token boolean important">true     </span><span class="token comment" spellcheck="true"># 隐藏歌词</span><span class="token comment" spellcheck="true"># Whether to display the musics.</span><span class="token comment" spellcheck="true"># 单独的音乐页面.</span><span class="token key atrule">musics</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>          <span class="token comment" spellcheck="true">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> tencent   <span class="token comment" spellcheck="true">#require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">7071279876     </span><span class="token comment" spellcheck="true">#require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false      </span><span class="token comment" spellcheck="true"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token string">"525px"</span> <span class="token comment" spellcheck="true">#列表最大高度</span></code></pre><p><code>id</code>获取方法示例: 浏览器打开QQ音乐，选择想要分享的音乐歌单，点击分享后生成链接后面的数字即为歌单id</p><p>有时候博客加载不出来音乐播放器，可以清除浏览器缓存加速</p><h3 id="文章Front-matter"><a href="#文章Front-matter" class="headerlink" title="文章Front-matter"></a>文章Front-matter</h3><p>修改博客根目录下scaffolds/post.md</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> date <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 星语<span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span>   <span class="token punctuation">-</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token key atrule">summary</span><span class="token punctuation">:</span> </code></pre><h2 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h2><p>在 <a href="https://valine.js.org/quickstart.html">Valine官网</a> 点击注册后创建新的应用，在应用=&gt;设置=&gt;应用凭证中获得对应的 <code>AppId</code> 和 <code>AppKey</code> ，在主题中的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> XXX  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> XXX  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'retro'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'Comment here'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png</code></pre><p>最新版的 <code>Valine</code> 已经移除了邮件通知功能</p><p>为确保 <code>Valine</code> 正常工作，可以配置相关插件</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>总体效果已经达到预期，接下来是完善二级目录（相册、音乐等），充实自己的博客。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git简要使用</title>
      <link href="/2022/03/22/git-jian-yao-shi-yong/"/>
      <url>/2022/03/22/git-jian-yao-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Git简要使用"><a href="#Git简要使用" class="headerlink" title="Git简要使用"></a>Git简要使用</h1><p>学习的是菜鸟教程的<a href="https://www.runoob.com/git/git-tutorial.html">Git教程</a> ，使用的是windows版的Git Bash。</p><h2 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h2><p>由于我未曾用过SVN、CVS等版本控制工具，在这里不作评价，先简单了解一下Git工作原理。</p><p>Git采用了分布式版本库的方式，即每个人将当前版本的代码拷贝到本地仓库各自进行修改，每个人都拥有全部的资源。</p><p>Git控制的相关信息储存在.git的隐藏目录中。</p><p>本地仓库的维护主要依赖三个区域：工作区、暂存区（Index）、HEAD。</p><ul><li>工作区：本地仓库所在目录，即我们直接处理代码的地方</li><li>暂存区：本质是文件索引，临时保存我们的修改</li><li>HEAD ：指向当前分支，保存最后提交的结果</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/1352126739_7909.jpg"></p><p>工作流程如下：</p><ol><li>克隆 Git 资源（或创建本地仓库并关联远程服务器）</li><li>编辑、添加、删除文件</li><li>如果其他人提交修改，可以更新资源</li><li>在提交前检查修改</li><li>提交修改，推送到远程服务器</li><li>如果发现错误，可以撤回提交</li></ol><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-process.png"></p><h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>可以在本地创建一个Git仓库</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> init <span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 将当前目录初始化为Git仓库（生成.git目录）</span><span class="token function">git</span> add <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token function">git</span> add <span class="token keyword">.</span><span class="token comment" spellcheck="true"># 跟踪修改（或新增）的文件文件，添加到暂存区</span><span class="token function">git</span> <span class="token function">rm</span> --cached <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 直接从暂存区删除文件，工作区则不做出改变</span><span class="token function">git</span> commit -m <span class="token string">"提交信息"</span>            <span class="token comment" spellcheck="true"># 保存修改到HEAD，但没有到远程仓库</span></code></pre><p>也可以克隆远端服务器上现有的Git仓库到本地</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token operator">&lt;</span>git repository<span class="token operator">></span> <span class="token operator">&lt;</span>local directory<span class="token operator">></span>        <span class="token comment" spellcheck="true"># 克隆Git仓库到当前目录</span><span class="token comment" spellcheck="true"># git repository 常为git://github.com:用户名/仓库名.git</span></code></pre><h3 id="检查修改"><a href="#检查修改" class="headerlink" title="检查修改"></a>检查修改</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> status <span class="token punctuation">[</span>-s<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 查看的是工作区和暂存区的状态，不显示已commit到项目历史的信息</span><span class="token comment" spellcheck="true"># 每次修改后都需要先add再commit</span><span class="token comment" spellcheck="true"># 可以使用git add -u 将之前跟踪的文件添加到暂存区</span><span class="token function">git</span> <span class="token function">diff</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 显示暂存区和工作区差异</span><span class="token function">git</span> reset HEAD<span class="token comment" spellcheck="true"># 暂存区的目录树被当前分支指向的目录树所替换</span><span class="token comment" spellcheck="true"># 工作区不受影响</span><span class="token function">git</span> checkout <span class="token keyword">.</span><span class="token function">git</span> checkout -- <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 用暂存区全部或指定的文件替换工作区的文件</span><span class="token comment" spellcheck="true"># *危险！*，会清除工作区中未添加到暂存区中的改动</span><span class="token function">git</span> checkout HEAD <span class="token keyword">.</span><span class="token function">git</span> checkout HEAD <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 用当前分支中的全部或者部分文件替换暂存区和以及工作区中的文件</span><span class="token comment" spellcheck="true"># *危险！*，会清除工作区、暂存区中的未提交改动</span><span class="token function">git</span> log <span class="token punctuation">[</span>--reverse --oneline --decorate<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 查看历史提交记录</span><span class="token comment" spellcheck="true"># --oneline 选项来查看历史记录的简洁的版本</span><span class="token function">git</span> blame <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 查看指定文件历史提交记录</span></code></pre><p><img src="/2022/03/22/git-jian-yao-shi-yong/1.jpg"></p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>Git多与github配合使用，一般将github作为远程仓库。</p><p>可以先设置git的用户名和邮箱</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"你的公司或个人邮箱"</span></code></pre><p>本地仓库和github仓库的传输是SSH加密的，需要RSA算法生成密钥：</p><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"your_github_email"</span></code></pre><p>默认生成在~/.ssh</p><p>将其中的 <strong>公钥id_ras.pub</strong> 的内容上传到github账户 Setting =&gt; SSH and GPG keys =&gt; New SSSH key中的Key中。</p><p>验证连接是否成功可以输入:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre><h3 id="推送改动"><a href="#推送改动" class="headerlink" title="推送改动"></a>推送改动</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> remote -v                <span class="token comment" spellcheck="true"># 查看本地仓库配置的远程仓库</span><span class="token function">git</span> remote <span class="token function">rm</span> origin         <span class="token comment" spellcheck="true"># 删除已关联的远程仓库</span><span class="token function">git</span> remote add <span class="token operator">&lt;</span>shortname<span class="token punctuation">(</span>多是origin<span class="token punctuation">)</span><span class="token operator">></span> <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token comment" spellcheck="true"># 将仓库连接到远程服务器</span><span class="token comment" spellcheck="true"># 远程仓库需先存在</span><span class="token function">git</span> branch -M main<span class="token function">git</span> push -u origin main    <span class="token comment" spellcheck="true"># 将当前分支推送到远程仓库的指定分支</span></code></pre><h3 id="更新与合并"><a href="#更新与合并" class="headerlink" title="更新与合并"></a>更新与合并</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> pull<span class="token comment" spellcheck="true"># 更新本地仓库至最新改动</span><span class="token comment" spellcheck="true"># 等效在工作区中获取（fetch）并合并（merge）远端的改动</span><span class="token function">git</span> fetch origin <span class="token operator">&lt;</span>branch<span class="token operator">></span><span class="token comment" spellcheck="true"># 下载新分支与数据</span><span class="token function">git</span> merge origin/<span class="token operator">&lt;</span>branch<span class="token operator">></span>    <span class="token comment" spellcheck="true"># 合并分支</span></code></pre><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93czEuc2luYWltZy5jbi9sYXJnZS8wMDZWckpBSmd5MWc1azByZG5pNGRqMzBtazBmdmRnZS5qcGc"></p><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>分支是用来将特性开发绝缘开来的。在你创建仓库的时候，<em>master</em> 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> branch                            <span class="token comment" spellcheck="true"># 列出本地分支</span><span class="token function">git</span> checkout -b <span class="token operator">&lt;</span>branch<span class="token operator">></span>                 <span class="token comment" spellcheck="true"># 创建并切换分支，不同的分支对应不同的工作目录</span><span class="token comment" spellcheck="true"># 实质是创建新的分支游标</span><span class="token function">git</span> branch -d <span class="token operator">&lt;</span>branch<span class="token operator">></span>                 <span class="token comment" spellcheck="true"># 删除指定分支</span><span class="token function">git</span> merge <span class="token operator">&lt;</span>branch<span class="token operator">></span>                     <span class="token comment" spellcheck="true"># 合并指定分支到当前分支</span><span class="token comment" spellcheck="true"># 会将删除指定分支没有的文件，创建指定分支添加的文件</span><span class="token comment" spellcheck="true"># 修改的文件会出现合并冲突，需要手动修改，再add,commit，保存结果</span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>对Git有了较为基本的认识，剩下的就是更多的实践。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建个人博客</title>
      <link href="/2022/03/11/github-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2022/03/11/github-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="Github-Hexo搭建个人博客"><a href="#Github-Hexo搭建个人博客" class="headerlink" title="Github+Hexo搭建个人博客"></a>Github+Hexo搭建个人博客</h1><p>采用的是知乎上枫叶的<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细）</a> </p><p>Github注册，Git安装不再赘述，Git的使用可以看 <a href="https://lminjy.github.io/2022/03/22/git-jian-yao-shi-yong/">Git简要使用</a></p><h2 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h2><p>node.js的安装教程没有太多问题，值得关注的是其包管理器npm</p><p>如果不想把模块都安装到C盘，需要设置npm安装全局模块的路径和环境变量。</p><p>在node.js安装的文件夹（以在D盘下为例）中创建新的文件夹node_cache、node_global。</p><p><strong>注意需要右键设置“属性“，在”安全“中编辑用户具有完全控制的权限。</strong> </p><p>在cmd中输入：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> prefix <span class="token string">"D:\nodejs\node_global"</span><span class="token function">npm</span> config <span class="token keyword">set</span> cache <span class="token string">"D:\nodejs\node_cache"</span></code></pre><p>设置环境变量（此电脑=&gt;右键属性=&gt;高级系统设置 =&gt; 环境变量）：</p><ul><li>在系统变量中创建新变量“NODE_PATH”，值为“D:\nodejs\node_global\node_modules”</li><li>在用户变量的Path中编辑npm的路径为“D:\nodejs\node_global”</li></ul><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>先在Github上创建 <strong>”用户名.github.io“</strong> 的仓库，在Settings=&gt;Pages可以查看博客的一些配置，如域名。</p><p>新建文件夹Blog，右键打开Git Bush here（cmd还需要配置cnpm的环境变量），输入命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 更换npm的安装源</span>cnpm <span class="token function">install</span> -g hexo-cli            hexo inithexo s<span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 博客上传路径在Blog\source\_posts</span>hexo cleanhexo g<span class="token punctuation">(</span>generate<span class="token punctuation">)</span></code></pre><p>但是目前仅能本机访问，还需部署到远程服务器</p><p>先部署到github上</p><p>打开Blog下的_config.yml 文件，在文件底部输入：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 注意冒号后空格(.yml文件)</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>lminjy/lminjy.github.io.git  <span class="token comment" spellcheck="true">#你的仓库地址</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> main</code></pre><p>打开Git Bash，安装Git部署插件：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-deployer-githexo d                <span class="token comment" spellcheck="true">#将博客部署到指定仓库</span></code></pre><p>部署完成后输入你的仓库名（如lminjy.github.io）就可以访问博客。</p><h3 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h3><p>Blog文件夹的目录如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">.</span>├── _config.yml├── package.json├── node_modules├── public├── scaffolds├── <span class="token function">source</span><span class="token operator">|</span>   ├── _drafts<span class="token operator">|</span>   └── _posts└── themes</code></pre><ul><li><p><code>_config.yml</code> 是站点配置文件</p></li><li><p><code>package.json</code> 是应用程序信息，通常不需要关心</p></li><li><p><code>node_modules</code> 用来存放 <code>node</code> 相关的模块，通常不需要关心</p></li><li><p><code>scaffolds</code> 是模版文件夹，即每次新建文章时，都会根据模版文件来创建对应的 <code>.md</code> 文件</p></li><li><p><code>source</code> 是资源文件夹，用来存放用户资源的地方</p><p>除 <code>_posts</code> 文件夹之外，开头命名为 _的文件 / 文件夹和隐藏的文件将会被忽略</p></li><li><p><code>theme</code> 是主题文件夹，每个主题的配置需实具体情况而定</p></li><li><p><code>pulic</code> 是存储hexo生成页面的文件夹，其内容将会部署到github上</p></li></ul><h2 id="个性化定制"><a href="#个性化定制" class="headerlink" title="个性化定制"></a>个性化定制</h2><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><p>首先是定制域名，我选择的是腾讯云的域名lminjy.xyz。</p><p>购买域名后需要解析域名：将域名指向网站空间ip，即手动把域名地址和ip地址的对应关系写到DNS服务器上。</p><p>具体操作是打开控制台=&gt;我的域名=&gt;“解析”=&gt;添加记录，填写对应关系：</p><ul><li>主机记录主要填写www或@（不需要在域名前加www）</li><li>记录类型可选A（需要ip地址）或CNAME（可将域名指向另一个域名，由另一个域名提供ip地址）</li><li>域名的ip地址查询可以通过ping，如ping lminjy.github.io</li></ul><p>在source文件夹下，新建CNAME.txt，其内容为你的域名，记得删掉后缀</p><p><strong>域名过期</strong> 后如果不想绑定，只需</p><ul><li>清空CNAME文件，并提交</li><li>可能还需要清除浏览器缓存</li></ul><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><p>我选的是matery主题：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:blinkfox/hexo-theme-matery themes/matery</code></pre><p>继续修改Blog下的_config.yml 文件（站点配置文件）：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Site</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 动物园 <span class="token comment" spellcheck="true">#标题</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'lminjyの博客'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> 这是个人总结学习经验，记录生活点滴的博客。<span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Python<span class="token punctuation">,</span> 机器学习<span class="token punctuation">,</span> 嵌入式等<span class="token punctuation">]</span><span class="token comment" spellcheck="true">##description,keywords是想让搜索引擎收录，便于SEO优化</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 星语     <span class="token comment" spellcheck="true">#作者</span><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN     <span class="token comment" spellcheck="true">#主题语言</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span> Asia/Shanghai    <span class="token comment" spellcheck="true">#中国的时区</span><span class="token comment" spellcheck="true"># Extensions</span><span class="token comment" spellcheck="true">## Plugins: https://hexo.io/plugins/</span><span class="token comment" spellcheck="true">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> matery   <span class="token comment" spellcheck="true">#主题改为matery</span></code></pre><p>主题语言看themes/next/language中的中文是 zh-CN 还是 zh-Hans。</p><p>在Blog下打开Git Bash，输入：</p><pre class=" language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</code></pre><p>稍等片刻，就可以输入自己的域名查看博客。</p><p>后续如果要上传博客，可以将自己写的.md文件复制到Blog\source_posts目录下，并重现部署</p><h2 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h2><p>本地编辑文章可能需要插入本地图片，但上传后就会遇到问题：</p><p><strong>本地的链接在文章发布之后必然失效，该怎么办？</strong></p><p>解决方法：</p><ul><li><p>将图片上传到图床</p></li><li><p>在本地source中建立images文件夹，将引用到的图片全部放在此文件夹中</p><p>路径为 <code>/images/图片名.jpg</code></p></li><li><p>在配置文件 <strong>_config.yml</strong> 里修改：<code>post_asset_folder: true</code></p><p>安转插件 <code>npm install hexo-asset-image --save</code></p><p>运行<code>hexo n "标题"</code> 时，<code>/source/_post</code> 文件夹中除了<code>标题.md</code>外，还有一个同名文件夹</p><p>将图片保存在文件夹，<code>.md</code> 文件用 <code>![替代文字](标题/图片名.jpg)</code></p></li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>主体框架已经搭建完毕，接下来是对matery主题的修改，进行更多的个性化定制。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
