<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>高等数学方法体系--积分篇</title>
      <link href="/2022/10/19/gao-deng-shu-xue-fang-fa-ti-xi-ji-fen-pian/"/>
      <url>/2022/10/19/gao-deng-shu-xue-fang-fa-ti-xi-ji-fen-pian/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>“âb样条插值</title>
      <link href="/2022/08/15/b-yang-tiao-cha-zhi/"/>
      <url>/2022/08/15/b-yang-tiao-cha-zhi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>EKF编程总结</title>
      <link href="/2022/08/15/ekf-bian-cheng-zong-jie/"/>
      <url>/2022/08/15/ekf-bian-cheng-zong-jie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kalman filter</title>
      <link href="/2022/08/12/kalman-filter/"/>
      <url>/2022/08/12/kalman-filter/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>概率论理论体系--随机过程</title>
      <link href="/2022/08/09/gai-lu-lun-li-lun-ti-xi-sui-ji-guo-cheng/"/>
      <url>/2022/08/09/gai-lu-lun-li-lun-ti-xi-sui-ji-guo-cheng/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>概率论理论体系--数理统计</title>
      <link href="/2022/08/07/gai-lu-lun-li-lun-ti-xi-shu-li-tong-ji/"/>
      <url>/2022/08/07/gai-lu-lun-li-lun-ti-xi-shu-li-tong-ji/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The Missing Semester of Your CS Education</title>
      <link href="/2022/07/02/the-missing-semester-of-your-cs-education/"/>
      <url>/2022/07/02/the-missing-semester-of-your-cs-education/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>scrapy学习</title>
      <link href="/2022/06/28/scrapy-xue-xi/"/>
      <url>/2022/06/28/scrapy-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="Scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a>Scrapy</h1><p>摘录 cnkai 的 <a href="https://www.cnblogs.com/cnkai/p/7396127.html">Scrapy学习篇</a></p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><ul><li>Engine:控制数据流在系统中所有组件中流动，并在相应动作发生时触发事件</li><li>Scheduler:从引擎接受request并入队，以便之后引擎请求时提供给引擎</li><li>Downloader:获取页面数据并提供给引擎(而后提供给spider)</li><li>Spiders:用户编写用于分析response并提取item(即获取到的item)或额外跟进的URL的类。每个spider负责处理一个特定(或一些)网站</li><li>Item Pipeline:处理被spider提取出来的item。典型的处理有清理、验证及持久化(例如存取到数据库中)</li><li>Downloader middlewares:是在引擎及下载器之间的特定钩子(specific hook)，处理Downloader传递给引擎的response</li><li>Spider middlewares:是在引擎及Spider之间的特定钩子(specific hook)，处理spider的输入(response)和输出(items及requests)</li></ul><h3 id="数据流向"><a href="#数据流向" class="headerlink" title="数据流向"></a>数据流向</h3><ul><li>引擎从Spider中获取到初始Requests。</li><li>引擎将该Requests放入调度器，并请求下一个要爬取的Requests。</li><li>调度器返回下一个要爬取的Requests给引擎</li><li>引擎将Requests通过下载器中间件转发给下载器(Downloader)。</li><li>一旦页面下载完毕，下载器生成一个该页面的Response，并将其通过下载中间件(返回(response)方向)发送给引擎。</li><li>引擎从下载器中接收到Response并通过Spider中间件(输入方向)发送给Spider处理。</li><li>Spider处理Response并返回爬取到的Item及(跟进的)新的Request给引擎。</li><li>引擎将(Spider返回的)爬取到的Item交给ItemPipeline处理，将(Spider返回的)Request交给调度器，并请求下一个Requests（如果存在的话）。</li><li>(从第一步)重复直到调度器中没有更多地Request。</li></ul><p><img src="https://images2017.cnblogs.com/blog/1203446/201708/1203446-20170819121703412-29055090.png"></p><h2 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h2><p>Scrapy是通过Scrapy命令行工具进行控制的</p><ul><li><p><code>scrapy startproject &lt;project_name&gt;</code></p><pre class=" language-python"><code class="language-python">CNVD<span class="token operator">/</span>    scrapy<span class="token punctuation">.</span>cfg    <span class="token comment" spellcheck="true">##项目的配置文件，带有这个文件的那个目录作为scrapy项目的根目录</span>            CNVD<span class="token operator">/</span>         __init__<span class="token punctuation">.</span>py            items<span class="token punctuation">.</span>py        <span class="token comment" spellcheck="true">##定义你所要抓取的字段</span>            pipelines<span class="token punctuation">.</span>py        <span class="token comment" spellcheck="true">##管道文件，当spider抓取到内容（item）以后，会被送到这里，这些信息（item）在这里会被清洗，去重，保存到文件或者数据库</span>                middlewares<span class="token punctuation">.</span>py        <span class="token comment" spellcheck="true">##中间件，主要是对功能的拓展，你可以添加一些自定义的功能，比如添加随机user-agent, 添加proxy</span>            settings<span class="token punctuation">.</span>py        <span class="token comment" spellcheck="true">##设置文件，用来设置爬虫的默认信息，相关功能开启与否，比如是否遵循robots协议，设置默认的headers，设置文件的路径，中间件的执行顺序等等。</span>            spiders<span class="token operator">/</span>        <span class="token comment" spellcheck="true">##在该目录下编写你自定义的spider</span>            __init__<span class="token punctuation">.</span>py            spiders<span class="token punctuation">.</span>py</code></pre><ul><li><code>scrapy crawl &lt;spider_name&gt;</code></li></ul></li><li><p><code>scrapy runspider &lt;spider_file.py&gt;</code></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>internship</title>
      <link href="/2022/06/27/internship/"/>
      <url>/2022/06/27/internship/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>英语学习</title>
      <link href="/2022/06/24/ying-yu-xue-xi/"/>
      <url>/2022/06/24/ying-yu-xue-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="英语学习"><a href="#英语学习" class="headerlink" title="英语学习"></a>英语学习</h1><p>##口语</p><p>###普遍问题</p><ul><li>如何提高口语词汇量</li><li>明白发音和口音的区别</li><li>语法的作用</li><li>如何表达流利</li></ul><h3 id="能力分解"><a href="#能力分解" class="headerlink" title="能力分解"></a>能力分解</h3><ul><li>听力能力障碍<ul><li><strong>听力输入的量一定是高于口语输出的</strong></li><li><strong>听过听力输入来培养口语输出是人类语言发育的基本规律</strong></li><li>哑巴英语： <strong>强行要将阅读输入转化成口语输出！</strong></li></ul></li><li>口语输出基础障碍<ul><li>单词输出、短语和短句输出、长句输出</li></ul></li><li>流利度和逻辑连贯问题</li></ul><h3 id="听力能力"><a href="#听力能力" class="headerlink" title="听力能力"></a>听力能力</h3><ul><li><p>听力词汇在 4000 - 5000 左右</p><ul><li>词意，词性，常见用法</li></ul></li><li><p>听力模仿材料难度– 自身能听懂 70% 以上的内容</p><ul><li>English Lesson</li></ul></li></ul><h3 id="口语输出"><a href="#口语输出" class="headerlink" title="口语输出"></a>口语输出</h3><ul><li>单词：发音<ul><li>Rachel’s English</li><li>BBC learning English 频道的音标视频</li><li>尽可能大声夸张地读</li></ul></li><li>短语和短句：日常表达积累，练习连读和失去爆破<ul><li>We Speak NYC</li><li>English With Lucy</li><li>Friends (去字幕)</li><li>How I Met Your Mother</li><li>多听原汁原味的英文对话</li><li>做配音练习</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WebPage</title>
      <link href="/2022/06/23/webpage/"/>
      <url>/2022/06/23/webpage/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络2</title>
      <link href="/2022/06/12/ji-suan-ji-wang-luo-2/"/>
      <url>/2022/06/12/ji-suan-ji-wang-luo-2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2022/06/12/ji-suan-ji-wang-luo/"/>
      <url>/2022/06/12/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习之numpy</title>
      <link href="/2022/06/01/python-xue-xi-zhi-random/"/>
      <url>/2022/06/01/python-xue-xi-zhi-random/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="array"><a href="#array" class="headerlink" title="array"></a>array</h2><ul><li>python list 列维 行维 页维 len三维矩阵</li><li>list 只支持len<ul><li>size(a)，shape(a)报错：name ‘···’ is not defined</li><li>a.size，a.shape报错：’list’ object has no attribute ‘···’</li></ul></li><li>numpy.ndarray同时支持len, size, shape<ul><li>len返回：列表元素个数，即第一维<ul><li>行维 列维 页维 ···</li></ul></li><li>size返回：所有元素个数</li><li>shape返回：元组</li></ul></li><li>多维数组的理解：一维数组元素的迭代</li></ul><h2 id="random"><a href="#random" class="headerlink" title="random"></a>random</h2><p>numpy.random.normal(loc=0,scale=1e-2,size=None) `</p><ul><li>loc(float)：正态分布的均值，对应概率分布的中心。loc=0是以Y轴为对称轴的正态分布</li><li>scale(float)：正态分布的标准差，对应概率分布的宽度。scale越大，正态分布的曲线越矮胖；scale越小，曲线越高瘦</li><li>size(int 或者元组)：输出的值赋在shape里，默认为None</li></ul><p><code>numpy.random.uniform(low=0.0,high=1.0,size=None)</code><br>生出size个符合均分布的浮点数，取值范围为[low, high)，默认取值范围为[0, 1.0)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VS code 入门</title>
      <link href="/2022/05/27/vs-code-ru-men/"/>
      <url>/2022/05/27/vs-code-ru-men/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DEAP学习</title>
      <link href="/2022/05/23/deap-xue-xi/"/>
      <url>/2022/05/23/deap-xue-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电子线路设计-直升机控制</title>
      <link href="/2022/05/19/dian-zi-xian-lu-she-ji-zhi-sheng-ji-kong-zhi/"/>
      <url>/2022/05/19/dian-zi-xian-lu-she-ji-zhi-sheng-ji-kong-zhi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>粒子群算法实现与改进</title>
      <link href="/2022/05/18/li-zi-qun-suan-fa-shi-xian-yu-gai-jin/"/>
      <url>/2022/05/18/li-zi-qun-suan-fa-shi-xian-yu-gai-jin/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>”四旋翼制作-源码架构“</title>
      <link href="/2022/05/11/si-xuan-yi-zhi-zuo-yuan-ma-jia-gou/"/>
      <url>/2022/05/11/si-xuan-yi-zhi-zuo-yuan-ma-jia-gou/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>”四旋翼制作经验“</title>
      <link href="/2022/05/11/si-xuan-yi-zhi-zuo-jing-yan/"/>
      <url>/2022/05/11/si-xuan-yi-zhi-zuo-jing-yan/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>四旋翼制作-2</title>
      <link href="/2022/05/11/si-xuan-yi-zhi-zuo-2/"/>
      <url>/2022/05/11/si-xuan-yi-zhi-zuo-2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>四旋翼制作</title>
      <link href="/2022/05/09/si-xuan-yi-zhi-zuo-1/"/>
      <url>/2022/05/09/si-xuan-yi-zhi-zuo-1/</url>
      
        <content type="html"><![CDATA[<h1 id="四旋翼制作"><a href="#四旋翼制作" class="headerlink" title="四旋翼制作"></a>四旋翼制作</h1><h2 id="NRF24L01模块"><a href="#NRF24L01模块" class="headerlink" title="NRF24L01模块"></a>NRF24L01模块</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>概率论方法体系</title>
      <link href="/2022/05/06/gai-lu-lun-fang-fa-ti-xi/"/>
      <url>/2022/05/06/gai-lu-lun-fang-fa-ti-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>概率论理论体系</title>
      <link href="/2022/05/06/gai-lu-lun-li-lun-ti-xi/"/>
      <url>/2022/05/06/gai-lu-lun-li-lun-ti-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>高等数学理论体系(下)</title>
      <link href="/2022/05/06/gao-deng-shu-xue-li-lun-ti-xi-xia/"/>
      <url>/2022/05/06/gao-deng-shu-xue-li-lun-ti-xi-xia/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算智能</title>
      <link href="/2022/05/03/ji-suan-zhi-neng/"/>
      <url>/2022/05/03/ji-suan-zhi-neng/</url>
      
        <content type="html"><![CDATA[<h1 id="计算智能"><a href="#计算智能" class="headerlink" title="计算智能"></a>计算智能</h1><h2 id="粒子群算法"><a href="#粒子群算法" class="headerlink" title="粒子群算法"></a>粒子群算法</h2><ul><li><p>理论来源</p><ul><li>社会心理学（特别是动态社会影响理论）<ul><li>个体根据环境变化及时调整个体信念态度，从而和群体的行为保持一致</li><li>个体局部最优解</li></ul></li><li>鸟类觅食时，搜寻当前离食物最近的鸟的最近区域<ul><li>群体全局最优解</li></ul></li></ul></li><li><p>粒子属性</p><ul><li>位置，即 <strong>解</strong></li><li>速度，决定搜索方向和步长</li><li>适应度，通过适应度函数计算，反映粒子优劣</li></ul></li><li><p>速度和位置更新</p><ul><li>$v_{id}^{k+1}=\omega v_{id}^{k}+c1r1(p_{id}^{k}-x_{id}^{k})+c2r2(p_{gd}^{k}-x_{id}^{k})$</li><li>$x_{id}^{k+1}=x_{id}^{k}+v_{id}^{k+1}$</li><li>$c1,c2一般取2；r1和r2为介于[0,1]均匀分布的随机数；\omega \in [0，1.4]$</li><li>$粒子数n \in (20,40)$</li><li>速度构成<ul><li>当前速度<ul><li>防止大幅改变方向，平衡粒子全局和局部搜索</li></ul></li><li>个人认知<ul><li>向自己曾找到的最优位置靠近，是粒子有足够强的全局搜索能力</li></ul></li><li>社会经验<ul><li>向邻域其他粒子学习，向邻域所有粒子曾找到的最优位置靠近</li></ul></li></ul></li></ul></li><li><p>算法要素</p><ul><li>算法参数<ul><li>种群大小<ul><li>过小，容易陷入局部最优；过大，计算时间大幅增加，且到一定水平，不再有明显作用</li></ul></li><li>学习因子</li><li>最大速度<ul><li>过小，开发能力增强，容易陷入局部最优；过大，搜索能力增强，容易错过最优解</li></ul></li><li>惯性权重<ul><li>目前采用惯性权重调整来设定最大速度</li></ul></li></ul></li><li>算法设计<ul><li>邻域拓扑结构<ul><li>星形、环形、冯·诺依曼，齿形</li></ul></li><li>粒子空间的初始化</li><li>停止条件<ul><li>足够好的适应值或预设的最大迭代次数</li></ul></li></ul></li></ul></li><li><p>算法改进</p><ul><li><p>动态调整种群规模</p></li><li><p>惯性权值设置</p><ul><li>固定权值</li><li>线性时变权值<ul><li>初期较大，后期较小</li></ul></li><li>模糊权值</li><li>随机取值</li></ul></li><li><p>学习因子设置</p><ul><li>同步（线性）法</li><li>异步法<ul><li>c1不断减小，c2不断增大</li></ul></li></ul></li><li><p>邻域拓扑结构设置</p><ul><li><p>基于索引号</p></li><li><p>基于距离</p><p>​</p></li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>强化学习</title>
      <link href="/2022/05/03/qiang-hua-xue-xi/"/>
      <url>/2022/05/03/qiang-hua-xue-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动机器人</title>
      <link href="/2022/04/20/yi-dong-ji-qi-ren/"/>
      <url>/2022/04/20/yi-dong-ji-qi-ren/</url>
      
        <content type="html"><![CDATA[<h1 id="Autonomous-Mobile-Robots"><a href="#Autonomous-Mobile-Robots" class="headerlink" title="Autonomous Mobile Robots"></a>Autonomous Mobile Robots</h1><p>机器人按基本功能类型可分为</p><ul><li>操作机器人：工业应用、医疗手术</li><li>移动机器人：工业应用、空间探测、家庭应用</li><li>移动作业机器人</li></ul><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>按移动机构：</p><ul><li>轮式：轮子和地面摩擦进行移动。依赖地面的平坦度和硬度，在非结构环境移动性能较差。</li><li>履带式：履带的面接触来适应地面的不平整。诱导轮+驱动轮+上滚轮+下滚轮。履带摩擦会对地面磨损。</li><li>腿式：足接触（非连续点接触），可以适应不平整、松软、不连续地形。要求腿部关节（驱动）快速摆动、支撑身体重量。多关节，多自由度，易受扰动。</li><li>躯干式：依附于空间的移动方式（蛇、飞鸟、鱼）。</li></ul><h3 id="发展趋势"><a href="#发展趋势" class="headerlink" title="发展趋势"></a>发展趋势</h3><ul><li>仿生</li><li>混合移动机构</li><li>新型驱动：电液，气动</li></ul><h3 id="关键性能"><a href="#关键性能" class="headerlink" title="关键性能"></a>关键性能</h3><ul><li>速度、加速度</li><li>机动度：可移动度（速度控制）+可操纵度（方向控制）</li><li>运动精度：点精度，重复精度</li><li>运动稳定性：静态稳定（质心点，CoM），动态稳定（ZMP、CoP）</li><li>移动自主性</li><li>载荷能力</li></ul><h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>机器人自主移动需要解决三个关键问题：</p><ul><li>在哪里？</li><li>去哪里？</li><li>怎么去？</li></ul><p>为此，需要：</p><ul><li>建立环境模型<ul><li>事先设立：通过与已有地图匹配</li><li>自主建立：传感器测量和信息处理获取对环境的局部观测信息和自身运动变化信息，通过信息融合构建环境的全局信息 （ <strong>感知+定位</strong> ）</li></ul></li><li>导航规划<ul><li>获得移动机器人质心或参考点的移动轨迹序列</li></ul></li><li>运动控制<ul><li>基于运动学模型由质心或参考点运动轨迹计算各个驱动的控制序列</li></ul></li></ul><p>各模块可采取消息订阅-发布模式进行信息交换</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="概率论"><a href="#概率论" class="headerlink" title="概率论"></a>概率论</h3><p>移动机器人的定位、地图的构建属于状态估计问题，常采用概率理论框架处理此类问题</p><p>状态估计的核心是从带有 <strong>随机噪声</strong> 的传感器 <strong>原始数据</strong> 中估计自身状态：</p><ul><li>如何表示随机噪声</li><li>如何建模带噪声的状态空间</li></ul><p><code>随机变量</code> 的定义是为了将 <code>随机事件</code> 定义到实数上（用数值概括事件），即 $X(e)=x, e \in S, x \in R$</p><p>随机事件的概率通常是通过 <strong>估计</strong> 获得</p><p><code>随机变量的概率分布函数</code>是将随机变量的取值映射到概率上（最终完成用概率描述事件）</p><p>概率的估计：</p><ul><li>对随机变量的特殊参数进行估计，如期望、方差</li><li>用特定的概率密度函数去拟合</li></ul><p>实际应用中通常利用容易测量的随机变量对不容易测量的随机变量进行估计，如激光测距和定位，</p><p>由此引出多变量联合概率分布，条件概率</p><h3 id="三维动态系统"><a href="#三维动态系统" class="headerlink" title="三维动态系统"></a>三维动态系统</h3><p>机器人是个刚体，需要描述 <strong>位置+姿态 (位姿)</strong> </p><h5 id="位姿变换"><a href="#位姿变换" class="headerlink" title="位姿变换"></a>位姿变换</h5><p>空间坐标系 $\vec{B}$ 下质点坐标 $\vec{p^B}=(x,y,z)^T$ </p><p>世界坐标系 $\vec{W}$ 下空间坐标系 $\vec{B}$ 三轴单位向量为 $\vec{x^W_B}，\vec{y^W_B}，\vec{z^W_B}$ ，原点为$\vec{t^W_B}$</p><p>则$\vec{p^W}=(\vec{x^W_B}; \vec{y^W_B}; \vec{z^W_B}); \vec{p^B} + \vec{t^W_B} \qquad \vec{R_B^W} \triangleq (\vec{x^W_B}; \vec{y^W_B}; \vec{z^W_B})$</p><p>旋转矩阵可以通过一组关于特定轴按 <strong>一定顺序</strong> 旋转的旋转矩阵连乘导出，即</p><p>$ \vec{R_B^W} = \vec{R_z}(\theta_{z})  \vec{R_y}(\theta_{y})  \vec{R_x}(\theta_{x}) $</p><p>机器人位姿可用变换矩阵$\vec{T}=\begin{array}{cols} \vec{R} &amp; \vec{t} \ 0 &amp; 1 \end{array}$ 定义</p><p>位姿变换$\begin{array}{cols} \vec{p^W} \ 1\end{array}=T_B^W T_{B_1}^B \begin{array}{cols} \vec{p^{B_1}} \ 1\end{array}$</p><p>机器人传感器往往测得的位姿是由速度和角速度甚至是加速度积分得到，具有累计误差。需要对速度、角速度等动态量建模</p><h5 id="状态系统建模"><a href="#状态系统建模" class="headerlink" title="状态系统建模"></a>状态系统建模</h5><p>$\frac{\rm d R^W_B}{\rm dt}= \vec{\omega^W_{BW}} \times R^W_{B}$</p><p>$\vec{\vartheta^W_{pW}}= \vec{\omega^W_{BW}} \times R^W_B \vec{p^B} + \vec{\vartheta^W_{BW}}$</p><h2 id="运动学模型"><a href="#运动学模型" class="headerlink" title="运动学模型"></a>运动学模型</h2><p><code>机器人运动学建模</code> 是建立机器人参考点运动控制和各个驱动运动控制之间的数学模型</p><p>速度控制模式</p><p>$参考点速度\vec{v}(t) \leftrightarrow 运动学模型\vec{v}(t) =f(\vec{\dot\varphi}(t)) \leftrightarrow 驱动轮速度\vec{v}(t) \ \leftrightarrow 轮子和电机间传动装置降速比\vec{n}(t)=\frac{\eta (\vec{\dot\varphi}(t) }{2\pi} \leftrightarrow 电机速度（光电或磁编码器）$</p><p>位置控制模式</p><ul><li>质心运动速度要求和稳定性判据 $\to$ 质心运动轨迹和落脚点位置  </li><li>落脚点位置 $\to$ 摆动腿末端运动轨迹</li><li>以质心为原点建立机器人坐标系，摆动腿末端为参考点，类似机械臂运动学建模</li><li>逆运动学模型计算各关节角度位置</li><li>根据当前关节角度信息反馈，正运动学模型计算参考点位置</li></ul><h3 id="腿式移动机器人"><a href="#腿式移动机器人" class="headerlink" title="腿式移动机器人"></a>腿式移动机器人</h3><ul><li>至少三条腿才能静态平衡</li><li>稳态行走至少需要6条腿</li><li>至少需要 **2个自由度(抬起、摆动) ** 才能将腿向前移动</li><li>通常，每条腿 <strong>3个自由度(臀部外展角度，臀部弯曲角度，膝盖弯曲角度)</strong> </li><li>K条腿机器人，步态矩阵 <strong>2k!</strong> ，其中2k等效，可能步态数 <strong>N=(2k-1)!</strong></li></ul><h3 id="轮式移动机器人"><a href="#轮式移动机器人" class="headerlink" title="轮式移动机器人"></a>轮式移动机器人</h3><h5 id="运动学建模要素"><a href="#运动学建模要素" class="headerlink" title="运动学建模要素"></a>运动学建模要素</h5><ul><li>车体</li><li>车轮</li><li>车体-车轮支撑机构：<ul><li>非独立悬挂</li><li>独立悬挂</li><li>4个或更多轮子需要柔性悬挂装置</li></ul></li><li>车轮驱动机构</li></ul><h5 id="轮子类型"><a href="#轮子类型" class="headerlink" title="轮子类型"></a>轮子类型</h5><ul><li>标准轮<ul><li>固定标准轮</li><li>转向标准轮</li></ul></li><li>脚轮<ul><li>有偏调向</li></ul></li><li>Swedish轮<ul><li>增加着地滚子轮的平面运动</li></ul></li><li>球轮</li></ul><h5 id="排布方式"><a href="#排布方式" class="headerlink" title="排布方式"></a>排布方式</h5><ul><li><p>独轮车</p><ul><li>标准轮</li><li>球轮</li></ul></li><li><p>两轮车</p><ul><li>前后排布</li><li>左右并列同轴排布</li></ul></li><li><p>三轮车</p><ul><li>2驱动轮+1随动轮</li><li>2随动轮+1驱动操舵轮</li><li>差动齿轮+操舵路</li></ul></li><li><p>四轮车</p><ul><li>阿克曼底盘</li><li>2驱动轮+2随动轮</li></ul></li><li><p>全方位移动车</p><ul><li>轮子的完整性约束，Swedish轮</li></ul></li></ul><h5 id="轮式移动运动学建模"><a href="#轮式移动运动学建模" class="headerlink" title="轮式移动运动学建模"></a>轮式移动运动学建模</h5><ul><li><p>旋转矩阵（2维）</p><ul><li>$\vec{\vartheta_{R}}=\vec{R}(\theta) \vec{\vartheta_{I}} \ \vec{R}(\theta)=\begin{array}{cols} \cos{\theta} &amp; \sin{\theta}  &amp; 0 \ -\sin{\theta} &amp; \cos{\theta} &amp; 0 \ 0 &amp; 0 &amp; 1\end{array}$</li></ul></li><li><p>基于作用合成</p><ul><li>$\vec{\vartheta_{R}}=(\frac{r}{2}(\dot\varphi_1 + \dot\varphi_2)) \quad 0 \quad \frac{r}{2l}(\dot\varphi_1 - \dot\varphi_2))^T$</li></ul></li><li><p>基于运动约束</p><ul><li>四种轮子与地面接触部分都是标准轮，即存在滚动约束和无侧滑约束</li><li>但由于结构形态的差异，整个轮子不一定存在滚动约束和无侧滑约束</li></ul></li></ul><p>$[\sin(\alpha + \beta) \quad -\cos(\alpha +\beta ) \quad -l\cos\beta]\vec{\vartheta_{R}}=r\vec{\dot\varphi} $</p><p>$[\cos(\alpha + \beta) \quad \sin(\alpha +\beta ) \quad l\sin\beta]\vec{\vartheta_{R}}=0$</p><p>$\alpha 为机器人坐标系原点P 到垂直旋转轴投影位置点A 与x轴夹角$</p><p>$\beta为PA与标准轮法向夹角$</p><p>$\gamma为转子轴和主轴平面夹角 $</p><ul><li>驱动轮：<ul><li>标准轮：滚动约束+无侧滑约束</li><li>脚轮、Swdish轮、球轮：滚动约束</li></ul></li><li>随动轮<ul><li>标准轮：无侧滑约束</li><li>脚轮、Swdish轮、球轮：无约束</li></ul></li></ul><h5 id="机动度"><a href="#机动度" class="headerlink" title="机动度"></a>机动度</h5><ul><li><p>可移动度</p><ul><li>受 <strong>独立存在</strong> 移动底盘轮子的无侧滑约束影响</li><li>零运动直线+瞬时转动中心（ICR）</li><li>工作空间维度减去无侧滑约束矩阵的 <strong>秩</strong></li></ul></li><li><p>可操纵度</p><ul><li>转向标准轮无侧滑约束矩阵的 <strong>秩</strong></li></ul></li><li><p>控制自由度 = 机动度</p><ul><li>速度控制+方向控制</li></ul></li><li><p>空间自由度（DOF）</p><ul><li>达成不同位姿的能力</li></ul></li><li><p>速度自由度（DDOF）= 可移动度</p><ul><li>行走不同路径的能力</li></ul></li></ul><h5 id="完整性"><a href="#完整性" class="headerlink" title="完整性"></a>完整性</h5><ul><li>完整机器人是没有非完整运动学约束的机器人<ul><li>完整运动学约束可以明确表示为仅含位置变量的函数</li><li>非完整运动学约束需要微分关系</li></ul></li><li>固定和可操纵的标准轮产生非完整约束</li></ul><h2 id="机器人感知"><a href="#机器人感知" class="headerlink" title="机器人感知"></a>机器人感知</h2><h3 id="传感器分类"><a href="#传感器分类" class="headerlink" title="传感器分类"></a>传感器分类</h3><ul><li>本体感受传感器<ul><li>测量系统内部值<ul><li>电机速度，轮负荷，机器人朝向</li></ul></li></ul></li><li>外感受传感器<ul><li>测量周围环境值<ul><li>到物体距离，周围光强</li></ul></li></ul></li><li>被动传感器<ul><li>测量从环境中进入传感器能量</li></ul></li><li>主动传感器<ul><li>发射能量，测量反应</li></ul></li></ul><h3 id="一般分类"><a href="#一般分类" class="headerlink" title="一般分类"></a>一般分类</h3><ul><li>触觉传感器<ul><li>物理接触或接触检测</li></ul></li><li>轮子、电机传感器<ul><li>轮子、电机速度和位置</li></ul></li><li>导向传感器<ul><li>相对于固定参考系的机器人方向</li></ul></li><li>地面信标<ul><li>在固定参考系定位</li></ul></li><li>主动测距<ul><li>反射，飞越时间，几何三角测量</li></ul></li></ul><h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><ul><li>响应的额定值<ul><li>动态范围</li><li>分辨率</li><li>线性度</li><li>带宽</li></ul></li><li>灵敏度<ul><li>对环境改变</li></ul></li><li>交叉灵敏度<ul><li>测量目标参数受环境参数影响</li></ul></li><li>误差<ul><li>随机误差概率分布不一定是对称的</li></ul></li></ul><h3 id="轮子-电机编码器"><a href="#轮子-电机编码器" class="headerlink" title="轮子\电机编码器"></a>轮子\电机编码器</h3><ul><li>增量式编码器</li><li>绝对式编码器</li></ul><h3 id="导向传感器"><a href="#导向传感器" class="headerlink" title="导向传感器"></a>导向传感器</h3><ul><li>陀螺仪：相对于固定参考系的方向<ul><li>机械陀螺仪<ul><li>标准陀螺仪<ul><li>陀螺轴惯性稳定（定轴性）</li><li>外层枢轴不能传送力矩到转轴</li></ul></li><li>速率陀螺仪：万向节受到附加阻尼的扭力弹簧，使其能测量角速度</li></ul></li><li>光学陀螺仪<ul><li>角速度传感器，使用从同一光源发射的两条单色光束</li><li>绕圆柱体，分别在光纤中顺时针、逆时针行进</li><li>两光束频率差正比于圆柱体角速度</li></ul></li></ul></li></ul><h3 id="测距传感器"><a href="#测距传感器" class="headerlink" title="测距传感器"></a>测距传感器</h3><ul><li>超声波测距<ul><li>通过压电变换器发生声波</li><li>发射波束开角，测量一段弧的距离<ul><li>返回距离较短或较长</li><li>回波不足以产生读数</li></ul></li></ul></li><li>激光测距<ul><li>距离估计不确定性反比与接收信号幅值平方</li></ul></li><li>毫米波雷达<ul><li>主要用于车载领域，77GHz和24GHz</li></ul></li><li>结构光</li></ul><h3 id="基于视觉的传感器"><a href="#基于视觉的传感器" class="headerlink" title="基于视觉的传感器"></a>基于视觉的传感器</h3><ul><li>基本成像原理：小孔成像<ul><li>世界坐标系    </li><li>相机坐标系     刚体变换<ul><li>坐标原点为相机的光心位置，X 轴和 Y 轴分别平行于图像坐标系的 x 轴和 y 轴，Z 轴为相机的光轴</li><li>物点$P_C=(X_C,Y_C,Z_C)^T$在像平面成像</li></ul></li><li>图像坐标系      透视投影<ul><li>像素坐标系和图像坐标系都在成像平面上，只是各自的原点和度量单位不一样</li><li>像点$p=(x,y)^T=(\frac{fX_C}{Z_C},\frac{fY_C}{Z_C})^T$</li></ul></li><li>像素坐标系     仿射变换<ul><li>$\begin{array}{cols} u\ v  \end{array}=\begin{array}{cols} u_0+k\frac{fX_C}{Z_C}\ v_0+k\frac{fY_C}{Z_C}  \end{array}$</li></ul></li><li>内参矩阵<ul><li>$\begin{matrix} \lambda u\ \lambda v \ \lambda  \end{matrix}=\begin{array}{cols} kf &amp; 0  &amp; u_0 \ 0 &amp; kf &amp; v_0 \ 0 &amp; 0 &amp; 1\end{array} \quad \begin{array}{cols} X_C\ Y_C \ Z_C \end{array}$</li></ul></li></ul></li><li>丢失信息：长度、角度；保留信息：直线</li><li>镜头畸变<ul><li>径向畸变：桶形、枕形<ul><li>$\begin{array}{cols} u_0\ v_0  \end{array}=(1+k_1r^2)\begin{array}{cols} u-u_0\ v-v_0 \end{array}+\begin{array}{cols} u_0\ v_0  \end{array} \ r^2=(u-u_0)^2+(v-v_0)$</li></ul></li><li>切向畸变</li><li>法向畸变</li></ul></li></ul><h3 id="计算机视觉"><a href="#计算机视觉" class="headerlink" title="计算机视觉"></a>计算机视觉</h3><ul><li>图像预处理<ul><li>二值化</li><li>滤波<ul><li>高斯滤波：边缘模糊</li><li>双边滤波：非线性，保留边缘</li></ul></li><li>边缘检测<ul><li>求图像与高斯函数一阶导的卷积，得到R</li><li>取R的绝对值</li><li>选择阈值（OTS阈值）去除因噪声产生的伪极值</li><li>非极大值抑制<ul><li>压缩产生单像素宽度的轮廓</li></ul></li></ul></li></ul></li><li>图像处理<ul><li>聚类、分割</li><li>特征提取<ul><li>特征是环境中可辨别的元素或几何基元</li><li>霍夫变换直线提取<ul><li>产生2D阵列A[m,b]，A具有m和b棋盘格化的轴</li><li>阵列A初始化为0</li><li>对图像各边缘像素，循环计算所有m和b的值</li><li>在阵列中搜索值最大的元素，对应图像要提取的直线边缘</li></ul></li><li>Harris角点</li></ul></li></ul></li></ul><h3 id="误差传播规律"><a href="#误差传播规律" class="headerlink" title="误差传播规律"></a>误差传播规律</h3><ul><li>$C_Y=F_XC_XF_X^T,其中Y_j=f_j(X_1,X_2\dots X_n)$</li></ul><h3 id="立体视觉"><a href="#立体视觉" class="headerlink" title="立体视觉"></a>立体视觉</h3><ul><li>同一点 P 分别被左右摄像机测量，可用四对共轭对求解旋转、平移向量</li><li>考虑到测量误差，应采用最小二乘等方法求解</li></ul><h2 id="机器人定位"><a href="#机器人定位" class="headerlink" title="机器人定位"></a>机器人定位</h2><h3 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h3><ul><li>基于控制信息定位<ul><li>测程法，航位推算法</li></ul></li><li>基于观测信息定位<ul><li>基于外部传感器</li><li>基于本体传感器</li></ul></li><li>基于观测控制信息定位<ul><li>基于概率地图的定位</li></ul></li></ul><h3 id="定位的挑战"><a href="#定位的挑战" class="headerlink" title="定位的挑战"></a>定位的挑战</h3><ul><li>传感器噪声<ul><li>多次读取数据或采用多传感器融合</li></ul></li><li>传感器混叠<ul><li>单次传感器接受信息不足以确定自身位置</li></ul></li><li>执行器噪声<ul><li>里程表偏差，积分误差<ul><li>路程误差</li><li>转动误差</li><li>漂移误差（轮子误差的差异）</li></ul></li><li>误差校正<ul><li>单向正方形路径</li><li>双方向正方形路径</li></ul></li></ul></li></ul><h3 id="环境建模要素"><a href="#环境建模要素" class="headerlink" title="环境建模要素"></a>环境建模要素</h3><ul><li>位置信任度<ul><li>单假设信任度：假定唯一位置</li><li>多假设信任度：描述位置的不确定性</li></ul></li><li>表示方式<ul><li>连续度量</li><li>离散度量</li><li>离散拓扑</li></ul></li><li>环境建模<ul><li>原始感知数据</li><li>低级特征</li><li>高级特征</li></ul></li></ul><h3 id="环境的地图表示"><a href="#环境的地图表示" class="headerlink" title="环境的地图表示"></a>环境的地图表示</h3><ul><li>连续策略<ul><li>直线提取</li></ul></li><li>分解策略<ul><li>精确单元分解</li><li>固定单元分解</li><li>自适应单元分解</li><li>拓扑分解<ul><li>要求机器人具有检测当前所处节点及在节点间行走的能力</li></ul></li></ul></li></ul><h3 id="基于概率地图定位"><a href="#基于概率地图定位" class="headerlink" title="基于概率地图定位"></a>基于概率地图定位</h3><ul><li>动作更新<ul><li>$s’<em>t=Act(o_t,s</em>{t-1})$</li></ul></li><li>感知更新<ul><li>$s_t=See(i_t,s’_{t})$</li></ul></li><li>马尔可夫定位<ul><li>从任意未知点出发的定位，要在任何时刻、在整个状态空间内更新所有位置的概率</li><li>基于动作更新 ：$p_t(l|o_t) = \sum_{l^{\prime}} p(l|l’,o_t) p_{t-1}(l’)$</li><li>基于感知更新： $p_t(l) = p_t(l|o_t,i) = \frac{p(i|l) p_t(l|o_t) }{p(i)} $</li><li>$p(i|l)$ ：传感器行为模型，所处位置$l$+和环绕$l$ 的局部环境度量地图</li></ul></li><li>卡尔曼滤波定位<ul><li>从已知起始位置开始跟踪机器人，要求将定位问题陈述为传感器融合问题</li><li>预测更新<ul><li>运用高斯误差运动模型，通过机器人在时刻 k 的位置以及控制输入 u(k) ，预测 k+1 时刻的机器人位置</li></ul></li><li>测量更新<ul><li>观测步骤：k+1时刻从机器人传感器得到在新位置的观测值 Z(k+1)   <strong>传感器坐标系</strong> </li><li>测量预测：使用预测的机器人位置和地图，产生多个观测的预测值  **世界坐标系 $\to$ 传感器坐标系 **</li><li>匹配步骤：在观测期间抽取的特征和测量预测中所选择的期望特征之间计算最佳匹配<ul><li>寻找预测特征和观测特征的对应对，可采用 Mahalanobis 距离</li></ul></li><li>估计步骤：卡尔曼滤波器融合所有匹配对提供信息，更新机器人信任度</li></ul></li></ul></li></ul><h3 id="SLAM"><a href="#SLAM" class="headerlink" title="SLAM"></a>SLAM</h3><ul><li><p>同时定位和建图</p></li><li><p>建立和维护地图</p><ul><li><p>预测和观测匹配</p></li><li><p>预测外的观测</p></li><li><p>未观测到的预测</p><p>​</p></li></ul></li></ul><h2 id="导航规划"><a href="#导航规划" class="headerlink" title="导航规划"></a>导航规划</h2><p>基于行为的导航</p><p>基于模型的导航需要四个模块的成功运行</p><ul><li>感知：获取并解释传感器信息，提取有意义特征</li><li>定位：确定自身在环境中位置</li><li>认知：识别并决定如何运动到达目标</li><li>运动控制：实现期望的运动轨迹</li></ul><p>自主导航方式</p><ul><li>有标识导引的固定路径导航：标识部署在移动路径上</li><li>有标识导引的无固定路径导航：标识部署在环境里帮助机器人定位</li><li>无标识导引的无固定路径导航</li></ul><p>无轨导航规划</p><ul><li>路径规划：全局，长期</li><li>避障规划：局部，即时</li><li>轨迹规划（路径跟随控制）</li></ul><h3 id="路径规划"><a href="#路径规划" class="headerlink" title="路径规划"></a>路径规划</h3><h5 id="位形空间（C-Space）"><a href="#位形空间（C-Space）" class="headerlink" title="位形空间（C-Space）"></a>位形空间（C-Space）</h5><ul><li>机器人简化为可移动点，用位置描述</li><li>环境中障碍物按机器人半径膨胀</li><li>障碍物空间+自由空间</li><li>一般将连续的位形空间离散化，达到近似完备性</li></ul><h5 id="分辨率完备"><a href="#分辨率完备" class="headerlink" title="分辨率完备"></a>分辨率完备</h5><p>通过解析方法对位形空间离散化</p><ul><li>行车图法<ul><li>基于障碍物几何形状分解位形空间</li><li>构建行车图$\to$路径搜索<ul><li>可视图法：可见顶点对<ul><li>采用多边形描述物体</li><li>所得路径过于靠近物体</li><li>多膨胀障碍物或修改所得路径</li></ul></li><li>Voronoi图法：计算自由空间中点到最近障碍物的距离，尖峰点<ul><li>最大化机器人与环境物体间距离</li><li>不适用于短距离定位传感器</li></ul></li></ul></li></ul></li><li>单元分解法<ul><li>将自由空间分解为若干小单元，以单元为顶点，相邻关系为边构成连通图</li><li>搜索连接初始单元和目标单元的路径</li><li>根据单元序列生成单元内部路径<ul><li>精确单元分解：严格基于环境几何形状</li><li>近似单元分解：栅格表示，可迭代分解栅格单元</li></ul></li></ul></li><li>势场法<ul><li>目标点产生吸引力，障碍物产生推斥力</li><li>在自由空间构建人工势场<ul><li>$U_{att}(q)=\begin{cases}  K_{att} \rho ^2_{goal}(q), &amp; \rho_{goal}(q) \leq d_a \ \ K_{att} (2\rho <em>{goal}(q) d_a -d_a^2), &amp; \rho</em>{goal}(q) &gt; d_a \end{cases}$</li><li>$U_{rep}(q)=\begin{cases}  \frac{1}{2}K_{rep} (\frac{1}{\rho(q)}-\frac{1}{\rho_0})^2, &amp; \rho(q) \leq \rho_0 \ 0, &amp; \rho(q) &gt; \rho_0\end{cases}$</li></ul></li><li>物体边界为凸，分段可微<ul><li>$F(q)=-\nabla U(q) =(\frac{\partial U}{\partial x} \quad \frac{\partial U}{\partial y})^T=-\nabla U_{att}(q)+\nabla U_{rep}(q)$</li></ul></li><li>物体边界为凹时，出现局部最小，产生死锁<ul><li>允许机器人进入局部极小值位置，采用其它策略跳出局部极小值<ul><li>随机运动</li><li>改变障碍物势场</li><li>采取跟墙或环绕等特殊运动形式</li></ul></li></ul></li><li>扩展势场法<ul><li>转动势场：力与机器人相对障碍物的方向有关</li><li>任务势场：滤除不可能对机器人运动有影响的障碍物，如仅考虑前方将至扇区的障碍物</li></ul></li></ul></li></ul><h5 id="概率完备"><a href="#概率完备" class="headerlink" title="概率完备"></a>概率完备</h5><ul><li>RPM：仅适用于静态环境，完整机器人<ul><li>构建步骤：随机生成节点，相邻结点连接<ul><li>随机位形生成：均匀概率分布，生成位形需要是否位于自由空间</li><li>局部规划器：确定、快速。直线连接两节点，碰撞检测可采用二分法或小步长增量法离散取点</li><li>临近节点：与最近邻的几个节点进行连接判断，采用KD树</li></ul></li><li>扩张步骤：图不连通。选出不连通区域节点，在其邻域内生成新的节点<ul><li>选出节点，可采用概率方式。对每个节点关联一个权重，表示节点周围区域的困难度<ul><li>权重：一定范围内节点数；最近连通单元距离；局部规划器构建可行道路的失败率；</li></ul></li><li>可短距离随机行走方式生成新节点</li></ul></li></ul></li><li>RRT<ul><li>在状态空间中构造树（快速搜索树）</li><li>RRT-Connect，RRT*</li></ul></li></ul><h5 id="路径搜索"><a href="#路径搜索" class="headerlink" title="路径搜索"></a>路径搜索</h5><ul><li>精确路径搜索<ul><li>深度优先</li><li>广度优先<ul><li>Dijstra</li></ul></li></ul></li><li>近似路径搜索<ul><li>A*算法：$f(n)=g(n)+h(n)$</li><li>进化算法</li></ul></li></ul><h3 id="避障规划"><a href="#避障规划" class="headerlink" title="避障规划"></a>避障规划</h3><ul><li>Bug算法<ul><li>Bug1算法：先绕障碍物1周，找到障碍物上最靠近目标点的点</li><li>Bug2算法：先绕障碍物移动，走到起点到目标点连线处，离开障碍物<ul><li>螺旋形障碍物</li></ul></li></ul></li><li>向量势直方图法（VFM）<ul><li>最高层包含对环境的详尽描述，栅格地图表示，栅格中数值表示该位置存在障碍物的可信度<ul><li>根据距离传感器检测数据将相关栅格数据+1</li></ul></li><li>中间层围绕机器人瞬时位置建立一位极坐标系直方图<ul><li>取一定区域（活跃区域），为每个活跃单元构建障碍物向量<ul><li>$m_{i,j}=(c_{i,j}^*)^2(a-bd_{i,j})$</li></ul></li><li>横坐标0~360°，表示相对机器人当前方向的偏移角度</li><li>纵坐标该方向上障碍物密度，表示该角度下行进代价</li></ul></li><li>VFH算法输出，为机器人的速度和转向控制参考值<ul><li>候选通道，选择最靠近目标点的通道</li><li>确定机器人行驶方向，$s_{max}  \to $ 宽通道、窄通道</li><li>$\theta_{steer}=\frac{k_n+k_f}{2}$</li></ul></li><li>VFM+<ul><li>根据执行轨迹（直线、圆弧）生成扇区</li><li>G=a·target_direction+b·wheel_orientation+c·previous_direction</li></ul></li></ul></li><li>动态窗口法（DMA）：可行速度空间<ul><li>确定速度搜索空间<ul><li>平移速度、旋转速度</li><li>速度控制运动模型</li><li>物理约束：运动学、加速度、障碍物约束</li><li>速度窗口空间</li></ul></li><li>在速度搜索空间搜索最优控制速度</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 科技导论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Autonomous Mobile Robots </tag>
            
            <tag> Slam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫学习</title>
      <link href="/2022/04/19/python-wang-luo-pa-chong-xue-xi/"/>
      <url>/2022/04/19/python-wang-luo-pa-chong-xue-xi/</url>
      
        <content type="html"><![CDATA[<p>#Python Spider</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> website API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学计算要点</title>
      <link href="/2022/04/14/shu-xue-ji-suan-yao-dian/"/>
      <url>/2022/04/14/shu-xue-ji-suan-yao-dian/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pycharm+anaconda使用总结</title>
      <link href="/2022/04/11/pycharm-anaconda-shi-yong-zong-jie/"/>
      <url>/2022/04/11/pycharm-anaconda-shi-yong-zong-jie/</url>
      
        <content type="html"><![CDATA[<p>​    安装教程参考南极洲闲人的<a href="https://blog.csdn.net/weixin_45965358/article/details/113088950">全网最详细的pyCharm+anaconda的安装。</a></p><p>#Pycharm</p><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ul><li>快速运行：Ctrl + Shift + F10</li><li>快速注释：选中后Ctrl + /</li><li>查找：Ctrl + F</li><li>替换：Ctrl + R</li><li>折叠所有代码：Ctrl + Shift + - （减号）</li><li>展开所有代码：Ctrl + Shift + + （加号）</li><li>折叠某一层所有代码：Ctrl + Alt + - （减号）</li><li>展开某一层所有代码：Ctrl + Alt + + （加号）</li></ul><p>快捷键可在File $\to$ Settings $\to$ Keymap中跟换设置</p><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><p>Anaconda 软件能够创建多个环境，</p><pre class=" language-shell"><code class="language-shell">conda create -n your_env_name python=X.X#windowsconda activate your_env_name conda deactivate env_nameconda remove -n your_env_name(虚拟环境名称) --allconda install package_name pip install package_name -i https://pypi.douban.com/simpleconda list    #查看安装包conda env lis    #查看虚拟环境</code></pre><p>虚拟环境文件存放在<code>XXXX（安装位置）\Anaconda3\envs</code> 目录</p><p>安装的第三方库存放在<code>XXXX（安装位置）\Anaconda3\Lib\site-packages</code> 目录</p><p>在每个环境中能够添加当前环境需要的第三方包（最好使用Anaconda Prompt），</p><p>这就是 Anaconda 软件对环境和包起到管理的作用。</p><h1 id="Pycharm-Anaconda"><a href="#Pycharm-Anaconda" class="headerlink" title="Pycharm+Anaconda"></a>Pycharm+Anaconda</h1><p>总体而言有两种方式进行“环境”的管理：</p><ol><li>在anaconda中提前准备好项目所需的环境，然后在pycharm中选择相应环境的解释器。</li><li>在pycharm中设定新建项目时随即生成对应的环境。</li></ol><p>可在File $\to$ Settings $\to$ Project设置Python Interpreter，即选择对应环境的解释器</p><p>#环境变量</p><p>Pycharm+Anaconda使用过程中问题多出现在环境变量的配置</p><p>###Anaconda环境变量</p><p>在用户变量的Path中配置Anaconda的环境变量</p><p><img src="https://img-blog.csdnimg.cn/20210304182534324.png"></p><p><code>Anaconda\Scripts</code> 目录下有conda.exe，pip.exe，pip3.exe等脚本</p><p>若已配置Python IDE的环境变量，需要将其下移至Anaconda环境变量下，</p><p>否则，第三方库将会下载到<code>Python\Lib\site-packages</code> 目录下。</p><p>也可以用cmd查看自己Python的默认安装路径：</p><pre class=" language-python"><code class="language-python">python <span class="token operator">-</span>m site<span class="token comment" spellcheck="true">##USER_BASE和USER_SITE是用户自定义的启用Python脚本（pip，easy-install等）和依赖安装包安装的路径</span></code></pre><p>一般来说，这样安装的第三方库均能正常使用。</p><p>但有些应用基于platform plugin，可能需要配置相应的环境变量，如Pyqt5。</p><p>如果报错：this application failed to start because no Qt platform plugin could be initialized, Reinstalling the application may fix this problem, available platform.</p><p>则可能需要配置Qt platform plugin环境变量。</p><h3 id="PyQt5-PyQt5-tools"><a href="#PyQt5-PyQt5-tools" class="headerlink" title="PyQt5+PyQt5-tools"></a>PyQt5+PyQt5-tools</h3><p>参考摇曳的树的<a href="https://blog.csdn.net/qq_44703886/article/details/107888896">【Anaconda】安装PyQt5+PyQt5-tools+Eric6</a></p><p>#####环境搭建</p><pre class=" language-shell"><code class="language-shell">conda create -n pyqt python=3.7conda activate pyqt</code></pre><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><pre class=" language-shell"><code class="language-shell">pip install sip==5.3.0 -i https://pypi.douban.com/simple   ## sip为pyqt开发商提供的支持包pip install qscintilla -i https://pypi.douban.com/simple## qt的文本编辑库pip install pyqt5 -i https://pypi.douban.com/simplepip install pyqt5-tools -i https://pypi.douban.com/simplepip install pyqt5-stubs -i https://pypi.douban.com/simple## pycharm的pyqt5智能检测总是出现提示异常。推荐同时安装pyqt5-stubs，解决该问题</code></pre><p><strong>建议</strong> ：降低版本安装，否则Anaconda base环境下安装designer.exe可以运行，但Pycharm运行项目（Meshroom）会报如上错误，更改环境变量也不行（<strong>亲测！！！</strong> ）</p><h1 id="External-Tools"><a href="#External-Tools" class="headerlink" title="External Tools"></a>External Tools</h1><p>需要注意新版本的python3.9在安装pyqt5后，</p><p>designer.exe路径为<code>Lib\sitepackages\qt5_applications\Qt\bin\designer.exe</code></p><p>在File $\to$ Settings $\to$Tools$\to$ External Tools，点击加号</p><h3 id="创建Qt-Designer"><a href="#创建Qt-Designer" class="headerlink" title="创建Qt Designer"></a>创建Qt Designer</h3><ul><li><p>Name：Qt Design（可自己定义）</p></li><li><p>program：XXX\Anaconda3\Lib\site-packages\qt5_applications\Qt\bin\designer.exe</p><p>Qt Designer的安装路径</p></li><li><p>Arguments：不填</p></li><li><p>directory：XXX\Anaconda3\Lib\site-packages\qt5_applications</p></li></ul><p>###创建PyUIC</p><ul><li>Name：PyUIC（可自己定义）</li><li>program：<code>D:\Anaconda3\python.exe</code></li><li>parameter：<code>-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py</code></li><li>directory：<code>D:\Anaconda3\</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pycharm </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown数学公式书写</title>
      <link href="/2022/04/10/markdown-shu-xue-gong-shi-shu-xie/"/>
      <url>/2022/04/10/markdown-shu-xue-gong-shi-shu-xie/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>语法格式为：</p><pre class=" language-markdown"><code class="language-markdown">|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><h3 id="公式输入"><a href="#公式输入" class="headerlink" title="公式输入"></a>公式输入</h3><ul><li>行间公式（inline）：用<code>$...$</code>将公式括起来</li><li>块间公式（display）：用<code>$$...$$</code>将公式括起来，默认显示在行中间</li></ul><h3 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h3><table><thead><tr><th>希腊字母</th><th>语法</th><th>希腊字母</th><th>语法</th><th>希腊字母</th><th>语法</th></tr></thead><tbody><tr><td>$\alpha$</td><td>\alpha</td><td>$\beta$</td><td>\beta</td><td>$\gamma$</td><td>\gamma</td></tr><tr><td>$\theta$</td><td>\theta</td><td>$\varphi$</td><td>\varphi</td><td>$\lambda$</td><td>\lambda</td></tr><tr><td>$\mu$</td><td>\mu</td><td>$\eta$</td><td>\eta</td><td>$\xi$</td><td>\xi</td></tr><tr><td>$\varepsilon$</td><td>\varepsilon</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><table><thead><tr><th>符号</th><th>语法</th><th>符号</th><th>语法</th><th>符号</th><th>语法</th></tr></thead><tbody><tr><td>$\subset$</td><td>\subset</td><td>$\supset$</td><td>\supset</td><td>$\subseteq$</td><td>\subseteq</td></tr><tr><td>$\in$</td><td>\in</td><td>$\notin$</td><td>\notin</td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Latex </tag>
            
            <tag> 数学公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题修改</title>
      <link href="/2022/03/31/matery-zhu-ti-xiu-gai/"/>
      <url>/2022/03/31/matery-zhu-ti-xiu-gai/</url>
      
        <content type="html"><![CDATA[<p>​    参考matery的README，博客园弗兰克的猫的<a href="https://www.cnblogs.com/mfrank/p/12830097.html#autoid-0-4-0">matery主题配置</a> ，阿里云YangAir的<a href="https://developer.aliyun.com/article/742964#slide-18">hexo+github搭建博客(超级详细版，精细入微)</a></p><h3 id="配置页面"><a href="#配置页面" class="headerlink" title="配置页面"></a>配置页面</h3><p>在根目录下</p><ul><li><p>修改 <code>_config.yml</code> 的 <code>url</code> 的值为我的域名 (<code>https://lminjy.xyz/</code>)</p></li><li><p>修改两处<code>per_page</code> 为<code>12</code></p></li><li><p>新建分类<code>categories</code> ，标签<code>tags</code>，关于我<code>about</code> ，404<code>404</code> ，友情链接（学习链接）<code>friends</code> ，留言板<code>contact</code></p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span class="token comment" spellcheck="true">##将categoris分别替换成tags,about,404,friends,contact</span></code></pre></li><li><p>编辑新建的页面文件 <code>/source/categories/index.md</code></p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>title: categoriesdate: 2022-03-31 15:15:00type: "categories"<span class="token title important">layout: "categories"<span class="token punctuation">---</span></span><span class="token title important"><span class="token punctuation">##</span>将categoris分别替换成tags,about,404,friends,contact</span><span class="token title important"><span class="token punctuation">##</span>404页面可以添加描述</span><span class="token title important"><span class="token punctuation">##</span>description: "Oops～，我崩溃了！找不到你想要的页面 o(╥﹏╥)o"</span></code></pre></li><li><p>在博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre></li></ul><h3 id="导航页面"><a href="#导航页面" class="headerlink" title="导航页面"></a>导航页面</h3><p>在<code>matery</code> 主题中的<code>_config.yml</code> 可以修改菜单导航的名称、路径url和图标icon</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式</li></ol><pre class=" language-yaml"><code class="language-yaml">  <span class="token comment" spellcheck="true"># 二级菜单写法如下</span>  <span class="token key atrule">Resources</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><p>新添加的菜单需要翻译成对应的中文，打开theme/next/languages/zh-CN.yml，设置：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">Resources</span><span class="token punctuation">:</span> 资源</code></pre><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><h4 id="替换Hexo的代码高亮"><a href="#替换Hexo的代码高亮" class="headerlink" title="替换Hexo的代码高亮"></a>替换Hexo的代码高亮</h4><pre class=" language-npm"><code class="language-npm">cnpm i -S hexo-prism-plugin</code></pre><p>修改根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span></code></pre><p>记得markdown代码框需要选择语言</p><h4 id="设置内容搜索"><a href="#设置内容搜索" class="headerlink" title="设置内容搜索"></a>设置内容搜索</h4><pre class=" language-npm"><code class="language-npm">cnpm install hexo-generator-search --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h4 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h4><pre class=" language-npm"><code class="language-npm">cnpm i hexo-permalink-pinyin --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><h4 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h4><pre class=" language-npm"><code class="language-npm">cnpm i --save hexo-wordcount</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h4 id="添加emoji表情支持"><a href="#添加emoji表情支持" class="headerlink" title="添加emoji表情支持"></a>添加emoji表情支持</h4><pre class=" language-npm"><code class="language-npm">cnpm install hexo-filter-github-emojis --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  <span class="token key atrule">customEmojis</span><span class="token punctuation">:</span></code></pre><h4 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h4><pre class=" language-npm"><code class="language-npm">cnpm install hexo-generator-feed --save</code></pre><p>在根目录下的 <code>_config.yml</code> 文件中，新增配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h3><p>在主题的 <code>_config.yml</code> 文件中修改</p><h4 id="梦想"><a href="#梦想" class="headerlink" title="梦想"></a>梦想</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">dream</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 电影台词  <span class="token key atrule">text</span><span class="token punctuation">:</span> 面包会有的，一切都会有的</code></pre><h4 id="子标题"><a href="#子标题" class="headerlink" title="子标题"></a>子标题</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 打字效果副标题.</span><span class="token comment" spellcheck="true"># 如果有符号 ‘ ，请在 ’ 前面加上 \</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否循环</span>  <span class="token key atrule">showCursor</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否显示光标</span>  <span class="token key atrule">startDelay</span><span class="token punctuation">:</span> <span class="token number">300 </span><span class="token comment" spellcheck="true"># 开始延迟</span>  <span class="token key atrule">typeSpeed</span><span class="token punctuation">:</span> <span class="token number">100 </span><span class="token comment" spellcheck="true"># 打字速度</span>  <span class="token key atrule">backSpeed</span><span class="token punctuation">:</span> <span class="token number">50 </span><span class="token comment" spellcheck="true"># 删除速度</span>  <span class="token key atrule">sub</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> Make The Change</code></pre><h4 id="网站favicon和logo"><a href="#网站favicon和logo" class="headerlink" title="网站favicon和logo"></a>网站favicon和logo</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Configure website favicon and LOGO</span><span class="token comment" spellcheck="true"># 配置网站favicon和网站LOGO</span><span class="token key atrule">favicon</span><span class="token punctuation">:</span> /favicon.png<span class="token key atrule">logo</span><span class="token punctuation">:</span> /medias/logo.png<span class="token comment" spellcheck="true">#更改相应的图片</span></code></pre><h4 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># profile in about page, including avatars, career, and personal introductions.</span><span class="token comment" spellcheck="true"># 在”关于”页面中配置个人信息，包括头像、职业和个人介绍.</span><span class="token key atrule">profile</span><span class="token punctuation">:</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> /medias/avatar.jpg  <span class="token key atrule">career</span><span class="token punctuation">:</span> Softwar Engineer  <span class="token key atrule">introduction</span><span class="token punctuation">:</span> If you wish to succeed<span class="token punctuation">,</span> you should use persistence as your good friend<span class="token punctuation">,</span> experience as your reference<span class="token punctuation">,</span> prudence as your brother and hope as your sentry.</code></pre><h4 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否激活文章末尾的打赏功能，默认激活（你替换为的你自己的微信、支付宝二维码图片、或者使用网络图片也可以）.</span><span class="token key atrule">reward</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 你的赏识是我前进的动力  <span class="token key atrule">wechat</span><span class="token punctuation">:</span> /medias/reward/wechat.png  <span class="token key atrule">alipay</span><span class="token punctuation">:</span> /medias/reward/alipay.jpg</code></pre><h4 id="Fork-me"><a href="#Fork-me" class="headerlink" title="Fork me"></a>Fork me</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display fork me on github icon and link, default true, You can change it to your repo address</span><span class="token comment" spellcheck="true"># 配置是否在 header 中显示 fork me on github 的图标，默认为true，你可以修改为你的仓库地址.</span><span class="token key atrule">githubLink</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/lminjy/lminjy.github.io  <span class="token key atrule">title</span><span class="token punctuation">:</span> Fork Me</code></pre><h4 id="GITHUB按钮"><a href="#GITHUB按钮" class="headerlink" title="GITHUB按钮"></a>GITHUB按钮</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># The configuration of the second button in the home banner,</span><span class="token comment" spellcheck="true"># including the display name of the button, the font awesome icon, and the hyperlink to the button.</span><span class="token comment" spellcheck="true"># 首页 banner 中的第二个按钮的配置，包括按钮的显示名称、font awesome图标和按钮的超链接.</span><span class="token key atrule">indexbtn</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> Github  <span class="token key atrule">icon</span><span class="token punctuation">:</span> fab fa<span class="token punctuation">-</span>github<span class="token punctuation">-</span>alt  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/lminjy/lminjy.github.io</code></pre><h4 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h4><p>​    在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># The configurations of the second line of home banner</span><span class="token comment" spellcheck="true"># icon/button will not show up if you leave the corresponding socialLink empty</span><span class="token comment" spellcheck="true"># 首页 banner 中的第二行个人信息配置，留空即不启用</span><span class="token key atrule">socialLink</span><span class="token punctuation">:</span>  <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/lminjy  <span class="token key atrule">email</span><span class="token punctuation">:</span> linminvc@163.com  <span class="token key atrule">facebook</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.facebook.com/xxx</span>  <span class="token key atrule">twitter</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://twitter.com/xxx</span>  <span class="token key atrule">qq</span><span class="token punctuation">:</span> <span class="token number">1140339517</span>  <span class="token key atrule">weibo</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://weibo.com/xxx</span>  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.zhihu.com/xxx</span>  <span class="token key atrule">rss</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># true、false</span></code></pre><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 网站背景图</span><span class="token key atrule">background</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Tokisaki-Galaxy/res/site/medias/background.jp"</span></code></pre><h4 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#背景canvas-nest</span><span class="token key atrule">canvas_nest</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255 </span><span class="token comment" spellcheck="true"># 线条颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  <span class="token key atrule">pointColor</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255 </span><span class="token comment" spellcheck="true"># 交点颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 线条透明度（0~1）, 默认: 0.5</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">-1 </span><span class="token comment" spellcheck="true"># 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1.</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">99 </span><span class="token comment" spellcheck="true"># 线条的总数量, 默认: 99</span><span class="token comment" spellcheck="true"># 是否激活页面飘雪效果, 只在桌面版网页启用特效</span><span class="token key atrule">snowdown</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h4 id="banner"><a href="#banner" class="headerlink" title="banner"></a>banner</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># banner 是否每日切换.</span><span class="token comment" spellcheck="true"># 若为 false, 则 banner 默认为 /medias/banner/0.jpg</span><span class="token key atrule">banner</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><h4 id="动态标签栏"><a href="#动态标签栏" class="headerlink" title="动态标签栏"></a>动态标签栏</h4><p>在matery\source\js下创建dynamic-title.js</p><pre class=" language-javascript"><code class="language-javascript"> <span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token keyword">var</span> titleTime<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">{</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヽ(●-`Д´-)ノ下次见啦！'</span><span class="token punctuation">;</span>         <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'φ(゜▽゜*)♪欢迎回来！'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>         titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在themes\matery\layout下的layout.ejs中添加</p><pre class=" language-ejs"><code class="language-ejs"><script src="<%- theme.jsDelivr.url %><%- url_for('/js/dynamic-title.js') %>"></script></code></pre><h4 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h4><p>在matery\source\css下修改matery.css的.bg-color</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#ec407a</span> <span class="token number">0%</span>, <span class="token hexcode">#7e57c2</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>  //透明效果 值范围 <span class="token number">0</span>~<span class="token number">1</span>，看情况自己修改<span class="token punctuation">}</span></code></pre><h4 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h4><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display the musics.</span><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">autoHide</span><span class="token punctuation">:</span> <span class="token boolean important">true    </span><span class="token comment" spellcheck="true"># hide automaticaly</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span> tencent   <span class="token comment" spellcheck="true">#require    music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">7071279876     </span><span class="token comment" spellcheck="true">#require    song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">true       </span><span class="token comment" spellcheck="true"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true  </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">hideLrc</span><span class="token punctuation">:</span> <span class="token boolean important">true     </span><span class="token comment" spellcheck="true"># 隐藏歌词</span><span class="token comment" spellcheck="true"># Whether to display the musics.</span><span class="token comment" spellcheck="true"># 单独的音乐页面.</span><span class="token key atrule">musics</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>          <span class="token comment" spellcheck="true">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> tencent   <span class="token comment" spellcheck="true">#require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">7071279876     </span><span class="token comment" spellcheck="true">#require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false      </span><span class="token comment" spellcheck="true"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">true   </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token string">"525px"</span> <span class="token comment" spellcheck="true">#列表最大高度</span></code></pre><p><code>id</code>获取方法示例: 浏览器打开QQ音乐，选择想要分享的音乐歌单，点击分享后生成链接后面的数字即为歌单id</p><p>有时候博客加载不出来音乐播放器，可以清除浏览器缓存加速</p><h4 id="文章Front-matter"><a href="#文章Front-matter" class="headerlink" title="文章Front-matter"></a>文章Front-matter</h4><p>修改博客根目录下scaffolds/post.md</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> date <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 星语<span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span>   <span class="token punctuation">-</span> <span class="token key atrule">summary</span><span class="token punctuation">:</span> </code></pre><h3 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h3><p>在<a href="https://valine.js.org/quickstart.html">Valine官网</a> 点击注册后创建新的应用，在应用–&gt;设置–&gt;应用凭证中获得对应的 <code>AppId</code> 和 <code>AppKey</code> ，在主题中的 <code>_config.yml</code> 文件，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> XXX  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> XXX  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'retro'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'Comment here'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png</code></pre><p>最新版的 <code>Valine</code> 已经移除了邮件通知功能。确保 <code>Valine</code> 正常工作，可以配置相关插件。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>总体效果已经达到预期，接下来是完善二级目录（相册、音乐等），将自己的过去好好总结，充实自己的博客。</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年浙大考研指南</title>
      <link href="/2022/03/30/2023-nian-zhe-da-kao-yan-zhi-nan/"/>
      <url>/2022/03/30/2023-nian-zhe-da-kao-yan-zhi-nan/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git简要使用</title>
      <link href="/2022/03/22/git-jian-yao-shi-yong/"/>
      <url>/2022/03/22/git-jian-yao-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>学习的是菜鸟教程的<a href="https://www.runoob.com/git/git-tutorial.html">Git教程</a> ，使用的是windows版的Git Bash。</p><h2 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h2><p>由于我未曾用过SVN、CVS等版本控制工具，在这里不作评价，先简单了解一下Git工作原理。</p><p>Git采用了分布式版本库的方式，即每个人将当前版本的代码拷贝到本地仓库各自进行修改，每个人都拥有全部的资源。</p><p>Git控制的相关信息储存在.git的隐藏目录中。</p><p>本地仓库的维护主要依赖三个区域：工作区、暂存区（Index）、HEAD。</p><ul><li>工作区：本地仓库所在目录，即我们直接处理代码的地方</li><li>暂存区：本质是文件索引，临时保存我们的修改</li><li>HEAD ：指向当前分支，保存最后提交的结果</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/1352126739_7909.jpg"></p><p>工作流程如下：</p><ol><li>克隆 Git 资源（或创建本地仓库并关联远程服务器）</li><li>编辑、添加、删除文件</li><li>如果其他人提交修改，可以更新资源</li><li>在提交前检查修改</li><li>提交修改，推送到远程服务器</li><li>如果发现错误，可以撤回提交</li></ol><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-process.png"></p><h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>可以在本地创建一个Git仓库</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> init <span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 将当前目录初始化为Git仓库（生成.git目录）</span><span class="token function">git</span> add <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token function">git</span> add <span class="token keyword">.</span><span class="token comment" spellcheck="true"># 跟踪修改（或新增）的文件文件，添加到暂存区</span><span class="token function">git</span> <span class="token function">rm</span> --cached <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 直接从暂存区删除文件，工作区则不做出改变</span><span class="token function">git</span> commit -m <span class="token string">"提交信息"</span>            <span class="token comment" spellcheck="true"># 保存修改到HEAD，但没有到远程仓库</span></code></pre><p>也可以克隆远端服务器上现有的Git仓库到本地</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token operator">&lt;</span>git repository<span class="token operator">></span> <span class="token operator">&lt;</span>local directory<span class="token operator">></span>        <span class="token comment" spellcheck="true"># 克隆Git仓库到当前目录</span><span class="token comment" spellcheck="true"># git repository 常为git://github.com:用户名/仓库名.git</span></code></pre><h3 id="检查修改"><a href="#检查修改" class="headerlink" title="检查修改"></a>检查修改</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> status <span class="token punctuation">[</span>-s<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 查看的是工作区和暂存区的状态，不显示已commit到项目历史的信息</span><span class="token comment" spellcheck="true"># 每次修改后都需要先add再commit</span><span class="token comment" spellcheck="true"># 可以使用git add -u 将之前跟踪的文件添加到暂存区</span><span class="token function">git</span> <span class="token function">diff</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 显示暂存区和工作区差异</span><span class="token function">git</span> reset HEAD<span class="token comment" spellcheck="true"># 暂存区的目录树被当前分支指向的目录树所替换</span><span class="token comment" spellcheck="true"># 工作区不受影响</span><span class="token function">git</span> checkout <span class="token keyword">.</span><span class="token function">git</span> checkout -- <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 用暂存区全部或指定的文件替换工作区的文件</span><span class="token comment" spellcheck="true"># *危险！*，会清除工作区中未添加到暂存区中的改动</span><span class="token function">git</span> checkout HEAD <span class="token keyword">.</span><span class="token function">git</span> checkout HEAD <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 用当前分支中的全部或者部分文件替换暂存区和以及工作区中的文件</span><span class="token comment" spellcheck="true"># *危险！*，会清除工作区、暂存区中的未提交改动</span><span class="token function">git</span> log <span class="token punctuation">[</span>--reverse --oneline --decorate<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 查看历史提交记录</span><span class="token comment" spellcheck="true"># --oneline 选项来查看历史记录的简洁的版本</span><span class="token function">git</span> blame <span class="token operator">&lt;</span>file<span class="token operator">></span><span class="token comment" spellcheck="true"># 查看指定文件历史提交记录</span></code></pre><p><img src="https://img-blog.csdn.net/20180819222755855"></p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>Git多与github配合使用，一般将github作为远程仓库。</p><p>可以先设置git的用户名和邮箱</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"你的公司或个人邮箱"</span></code></pre><p>本地仓库和github仓库的传输是SSH加密的，需要RSA算法生成密钥：</p><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"your_github_email"</span></code></pre><p>默认生成在~/.ssh</p><p>将其中的 <strong>公钥id_ras.pub</strong> 的内容上传到github账户 Setting =&gt; SSH and GPG keys =&gt; New SSSH key中的Key中。</p><p>验证连接是否成功可以输入:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre><h3 id="推送改动"><a href="#推送改动" class="headerlink" title="推送改动"></a>推送改动</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> remote -v                <span class="token comment" spellcheck="true"># 查看本地仓库配置的远程仓库</span><span class="token function">git</span> remote <span class="token function">rm</span> origin         <span class="token comment" spellcheck="true"># 删除已关联的远程仓库</span><span class="token function">git</span> remote add <span class="token operator">&lt;</span>shortname<span class="token punctuation">(</span>多是origin<span class="token punctuation">)</span><span class="token operator">></span> <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token comment" spellcheck="true"># 将仓库连接到远程服务器</span><span class="token comment" spellcheck="true"># 远程仓库需先存在</span><span class="token function">git</span> branch -M main<span class="token function">git</span> push -u origin main    <span class="token comment" spellcheck="true"># 将当前分支推送到远程仓库的指定分支</span></code></pre><h3 id="更新与合并"><a href="#更新与合并" class="headerlink" title="更新与合并"></a>更新与合并</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> pull<span class="token comment" spellcheck="true"># 更新本地仓库至最新改动</span><span class="token comment" spellcheck="true"># 等效在工作区中获取（fetch）并合并（merge）远端的改动</span><span class="token function">git</span> fetch origin <span class="token operator">&lt;</span>branch<span class="token operator">></span><span class="token comment" spellcheck="true"># 下载新分支与数据</span><span class="token function">git</span> merge origin/<span class="token operator">&lt;</span>branch<span class="token operator">></span>    <span class="token comment" spellcheck="true"># 合并分支</span></code></pre><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93czEuc2luYWltZy5jbi9sYXJnZS8wMDZWckpBSmd5MWc1azByZG5pNGRqMzBtazBmdmRnZS5qcGc"></p><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>分支是用来将特性开发绝缘开来的。在你创建仓库的时候，<em>master</em> 是“默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> branch                            <span class="token comment" spellcheck="true"># 列出本地分支</span><span class="token function">git</span> checkout -b <span class="token operator">&lt;</span>branch<span class="token operator">></span>                 <span class="token comment" spellcheck="true"># 创建并切换分支，不同的分支对应不同的工作目录</span><span class="token comment" spellcheck="true"># 实质是创建新的分支游标</span><span class="token function">git</span> branch -d <span class="token operator">&lt;</span>branch<span class="token operator">></span>                 <span class="token comment" spellcheck="true"># 删除指定分支</span><span class="token function">git</span> merge <span class="token operator">&lt;</span>branch<span class="token operator">></span>                     <span class="token comment" spellcheck="true"># 合并指定分支到当前分支</span><span class="token comment" spellcheck="true"># 会将删除指定分支没有的文件，创建指定分支添加的文件</span><span class="token comment" spellcheck="true"># 修改的文件会出现合并冲突，需要手动修改，再add,commit，保存结果</span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>教程整理到这里已经对Git有了较为基本的认识，剩下的就是更多的实践，这样才能更深入的理解并掌握。</p>]]></content>
      
      
      <categories>
          
          <category> 法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高等数学</title>
      <link href="/2022/03/17/gao-deng-shu-xue/"/>
      <url>/2022/03/17/gao-deng-shu-xue/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown简要使用</title>
      <link href="/2022/03/15/markdown-jian-yao-shi-yong/"/>
      <url>/2022/03/15/markdown-jian-yao-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>采用的是Typora编辑.md文件。学习的是菜鸟教程中的<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown教程</a>，根据自己的使用习惯进行记录便于直接上手。需要注意的符号输入后敲击 <strong>空格</strong> 或 <strong>换行</strong> 实现效果。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用1-6个[^#] 可以表示1-6级标题</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>文字两端使用1-3个[^*] 可以分别表示 <em>斜体</em> 、 <strong>粗体</strong> 、 <em><strong>粗斜体</strong></em> </p><h2 id="线"><a href="#线" class="headerlink" title="线"></a>线</h2><p>在空白行连续使用三个以上[^*]来建立分割线</p><hr><p>文字两端加上两个[^~]可建立<del>删除线</del></p><p><u>下滑线</u> 通过HTML的&lt;u&gt;标签实现</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>[^脚注] 是通过 [^要注明的文字] 来实现的</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表使用[^*] ，有序列表使用[^数字加.]</p><p>列表嵌套只需在[^tab键加-] </p><p>注意符号后面接空格</p><ol><li>第一项<ul><li>子列表第一个元素</li><li>子列表第二个元素</li></ul></li><li>第二项</li></ol><h2 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h2><p>段落开头使用[^&gt;]</p><blockquote><p>区块引用</p></blockquote><p>区块可多使用一个[^&gt;] 进行下一级嵌套，也可结合列表</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>[链接名称](链接地址)</p><p><a href="http://lminjy.xyz/">我的博客</a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>![alt 属性文本](图片地址)</p><p>由于Markdown没法指定图片高度和宽度，可以使用&lt;img&gt;标签</p><p>如：</p><p>&lt;img src=”图片地址” width=”50%”&gt;</p><img src="https://img2.baidu.com/it/u=33681365,2840241919&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=729&amp;h=500" width="50%"><h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><p>可在段首使用[^```] 包裹一段代码，并指定一种语言</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello World!'</span><span class="token punctuation">)</span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>教程整理到这里已经足以应付日常写作了，当然还缺少数学公式的书写方法，这个目前需求不大，留待需要时强化学习。</p><p>我始终认为语法的学习应该是短暂、快速的，像这样练手的写篇短文便算熟知了。</p><p>​真正富有创造力的从来都不是工具，而是人民群众。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+Hexo搭建博客</title>
      <link href="/2022/03/11/github-hexo-da-jian-bo-ke/"/>
      <url>/2022/03/11/github-hexo-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="Github-Hexo搭建个人博客"><a href="#Github-Hexo搭建个人博客" class="headerlink" title="Github+Hexo搭建个人博客"></a>Github+Hexo搭建个人博客</h1><p>采用的是知乎上枫叶的<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细）</a> 。</p><p>Github注册，Git安装不再赘述，Git的使用可以看</p><h2 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h2><p>node.js的安装教程没有太多问题，值得关注的是其包管理器npm，如果不想把模块都安装到C盘，</p><p>需要设置npm安装全局模块的路径和环境变量。</p><p>在node.js安装的文件夹（以在D盘下为例）中创建新的文件夹node_cache、node_global。</p><p><strong>注意需要右键设置“属性“，在”安全“中编辑用户具有完全控制的权限。</strong> </p><p>在cmd中输入：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> prefix <span class="token string">"D:\nodejs\node_global"</span><span class="token function">npm</span> config <span class="token keyword">set</span> cache <span class="token string">"D:\nodejs\node_cache"</span></code></pre><p>设置环境变量（此电脑=&gt;右键属性=&gt;高级系统设置 =&gt; 环境变量）：</p><ul><li>在系统变量中创建新变量“NODE_PATH”，值为“D:\nodejs\node_global\node_modules”</li><li>在用户变量的Path中编辑npm的路径为“D:\nodejs\node_global”</li></ul><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>先在Github上创建<strong>”用户名.github.io“</strong> 的仓库，在Settings=&gt;Pages可以查看博客的一些配置，如域名。</p><p>新建文件夹Blog，右键打开Git Bush here（cmd还需要配置cnpm的环境变量），输入命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 更换npm的安装源</span>cnpm <span class="token function">install</span> -g hexo-cli            hexo inithexo s<span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 博客上传路径在Blog\source\_posts</span>hexo cleanhexo g<span class="token punctuation">(</span>generate<span class="token punctuation">)</span></code></pre><p>但是目前仅能本机访问，还需部署到远程服务器</p><p>先部署到github上</p><p>打开Blog下的_config.yml 文件，在文件底部输入：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 注意冒号后空格(.yml文件)</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>lminjy/lminjy.github.io.git  <span class="token comment" spellcheck="true">#你的仓库地址</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> main</code></pre><p>打开Git Bash，安装Git部署插件：</p><pre class=" language-bash"><code class="language-bash">cnpm <span class="token function">install</span> --save hexo-deployer-githexo d                <span class="token comment" spellcheck="true">#将博客部署到指定仓库</span></code></pre><p>部署完成后输入你的仓库名（如lminjy.github.io）就可以访问博客。</p><h2 id="个性化定制"><a href="#个性化定制" class="headerlink" title="个性化定制"></a>个性化定制</h2><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><p>首先是定制域名，我选择的是腾讯云的域名lminjy.xyz。</p><p>购买域名后需要解析域名：将域名指向网站空间ip，即手动把域名地址和ip地址的对应关系写到DNS服务器上。</p><p>具体操作是打开控制台=&gt;我的域名=&gt;“解析”=&gt;添加记录，填写对应关系：</p><ul><li>主机记录主要填写www或@（不需要在域名前加www）</li><li>记录类型可选A（需要ip地址）或CNAME（可将域名指向另一个域名，由另一个域名提供ip地址）</li><li>域名的ip地址查询可以通过ping，如ping lminjy.github.io</li></ul><p>记得在source文件夹下，新建CNAME.txt，其内容为你的域名，然后删掉后缀</p><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><p>我选的是matery主题：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:blinkfox/hexo-theme-matery themes/matery</code></pre><p>继续修改Blog下的_config.yml 文件（站点配置文件）：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Site</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 动物园 <span class="token comment" spellcheck="true">#标题</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'lminjyの博客'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> 这是个人总结学习经验，记录生活点滴的博客。希望在以后的生命旅途中，独自精彩。<span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>C<span class="token punctuation">,</span> Python<span class="token punctuation">,</span> 机器视觉<span class="token punctuation">,</span> 深度学习<span class="token punctuation">,</span> 嵌入式等<span class="token punctuation">]</span><span class="token comment" spellcheck="true">##description,keywords是想让搜索引擎收录，便于SEO优化</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 星语     <span class="token comment" spellcheck="true">#作者</span><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN     <span class="token comment" spellcheck="true">#主题语言</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span> Asia/Shanghai    <span class="token comment" spellcheck="true">#中国的时区</span><span class="token comment" spellcheck="true"># Extensions</span><span class="token comment" spellcheck="true">## Plugins: https://hexo.io/plugins/</span><span class="token comment" spellcheck="true">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> matery   <span class="token comment" spellcheck="true">#主题改为matery</span></code></pre><p>主题语言看themes/next/language中的简体中文是 zh-CN 还是 zh-Hans。</p><p>在Blog下打开Git Bash，输入：</p><pre class=" language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d</code></pre><p>稍等片刻，就可以输入自己的域名查看博客。</p><p>后续如果要上传博客，可以将自己写的.md文件复制Blog\source_posts目录下，再输入</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>博客的大体框架目前已经完成，后续的任务是多看，多优化。</p>]]></content>
      
      
      <categories>
          
          <category> 法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
